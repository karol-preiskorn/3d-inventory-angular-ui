var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddDeviceComponent.html",[0,0.309,1,0.783]],["body/components/AddDeviceComponent.html",[0,0.467,1,1.184,2,1.181,3,0.466,4,0.322,5,0.962,6,0.962,7,0.962,8,0.886,9,0.25,10,4.812,11,3.716,12,1.886,13,2.179,14,2.561,15,0.962,16,2.22,17,2.044,18,1.557,19,0.824,20,1.393,21,3.688,22,1.393,23,3.138,24,0.322,25,0.521,26,4.418,27,4.418,28,2.35,29,2.569,30,4.042,31,1.087,32,4.289,33,2.321,34,4.042,35,1.181,36,2.598,37,4.289,38,4.01,39,3.202,40,2.046,41,1.059,42,2.598,43,0.816,44,0.033,45,0.912,46,0.621,47,0.816,48,2.169,49,1.175,50,1.388,51,2.598,52,2.598,53,0.691,54,0.751,55,2.598,56,3.688,57,2.598,58,2.169,59,2.598,60,0.962,61,0.583,62,1.675,63,1.675,64,1.506,65,1.366,66,0.285,67,0.094,68,2.598,69,2.322,70,2.598,71,2.169,72,2.118,73,1.951,74,2.598,75,2.598,76,3.76,77,1.675,78,1.245,79,2.598,80,1.886,81,1.886,82,1.366,83,3.138,84,3.76,85,0.962,86,1.393,87,1.181,88,0.962,89,1.521,90,0.962,91,1.393,92,0.635,93,0.962,94,0.635,95,0.962,96,0.635,97,0.962,98,0.635,99,0.962,100,0.635,101,0.751,102,0.962,103,0.635,104,0.816,105,0.635,106,0.962,107,0.691,108,0.962,109,0.635,110,0.816,111,0.962,112,0.962,113,0.057,114,0.057]],["title/components/AppComponent.html",[0,0.309,92,0.783]],["body/components/AppComponent.html",[0,0.516,1,0.918,2,1.52,3,0.465,4,0.465,5,1.391,6,1.391,7,1.391,8,1.281,9,0.362,15,1.391,16,2.36,17,2.172,18,0.999,19,0.639,20,1.793,22,1.793,24,0.465,25,0.671,41,0.703,44,0.032,45,0.824,46,0.413,53,0.999,54,1.086,60,0.703,61,0.842,66,0.413,67,0.136,85,1.391,86,1.793,87,1.52,88,1.391,89,1.776,90,1.391,91,1.793,92,1.382,93,1.391,94,0.918,95,1.391,96,0.918,97,1.391,98,0.918,99,1.391,100,0.918,101,1.086,102,1.391,103,0.918,104,1.18,105,0.918,106,1.391,107,0.999,108,1.391,109,0.918,110,1.18,111,1.391,112,1.391,113,0.073,114,0.073,115,3.135,116,3.119,117,5.354,118,4.839,119,5.354,120,1.086,121,4.039,122,3.119,123,3.756]],["title/modules/AppModule.html",[124,2.325,125,1.857]],["body/modules/AppModule.html",[1,1.326,3,0.334,4,0.334,9,0.26,11,1.739,17,0.92,19,0.459,29,2.381,40,2.01,44,0.033,60,1.179,61,0.605,62,1.739,63,1.739,65,1.418,66,0.296,67,0.098,92,1.476,94,1.326,96,1.326,98,1.476,100,1.326,103,1.326,105,1.326,107,1.443,109,1.326,113,0.058,114,0.058,125,3.763,126,1.418,127,2.49,128,2.252,129,2.252,130,2.252,131,2.252,132,2.252,133,2.252,134,3.145,135,3.225,136,2.252,137,2.252,138,2.698,139,3.225,140,3.864,141,2.805,142,3.225,143,3.225,144,3.864,145,1.959,146,2.805,147,3.864,148,3.864,149,2.252,150,1.959,151,3.225,152,2.252,153,2.698,154,3.864,155,2.252,156,1.959,157,2.698,158,2.698,159,2.252,160,3.225,161,2.252,162,1.739,163,2.252,164,2.252,165,1.739,166,2.252,167,1.739,168,2.252,169,2.252,170,2.252,171,2.698,172,2.252,173,2.698,174,2.252,175,2.698,176,2.698,177,1.293,178,4.513,179,2.252,180,2.252,181,1.564,182,2.698,183,2.252,184,2.698,185,0.718,186,2.698,187,2.698]],["title/modules/AppRoutingModule.html",[124,2.325,134,1.857]],["body/modules/AppRoutingModule.html",[0,0.586,1,1.178,3,0.462,4,0.462,9,0.36,11,2.405,18,0.993,19,0.908,44,0.033,60,1.176,61,0.837,64,2.163,66,0.41,67,0.135,82,1.961,94,1.178,96,1.178,98,0.912,100,1.178,101,1.079,103,1.178,104,1.172,105,1.178,109,1.178,110,1.172,113,0.073,114,0.073,126,1.961,134,2.793,141,2.709,142,3.115,146,3.498,159,3.115,160,4.023,161,3.115,162,2.405,163,3.115,164,3.115,165,2.405,166,3.115,167,2.405,168,3.115,169,3.115,170,3.115,172,3.115,188,3.732,189,3.732,190,4.819,191,3.44,192,1.503,193,6.085,194,3.115,195,2.709,196,3.115,197,3.732,198,3.732]],["title/classes/Bug.html",[67,0.116,199,2.325]],["body/classes/Bug.html",[3,0.568,4,0.568,9,0.442,24,0.568,25,0.759,41,1.097,44,0.031,46,0.643,66,0.504,67,0.166,72,2.807,113,0.082,114,0.082,120,1.82,199,3.976,200,2.198,201,3.827,202,5.857,203,5.857,204,4.585,205,4.585,206,4.585]],["title/components/CubeComponent.html",[0,0.309,94,0.783]],["body/components/CubeComponent.html",[0,0.389,1,0.444,2,0.901,3,0.225,4,0.225,5,1.063,6,0.674,7,0.674,8,0.62,9,0.175,13,1.663,14,2.06,15,0.674,16,2.051,17,1.888,18,0.484,19,0.309,20,1.063,22,1.063,24,0.225,25,0.647,28,2.223,31,0.83,33,1.934,35,1.116,41,1.143,44,0.033,45,0.488,46,0.617,49,1.242,50,1.466,53,1.473,54,1.601,60,0.537,61,0.408,66,0.2,67,0.066,69,3.35,85,0.674,86,1.063,87,1.116,88,0.674,89,1.267,90,0.674,91,1.063,92,0.444,93,0.674,94,1.238,95,0.674,96,0.444,97,0.674,98,0.444,99,0.674,100,0.444,101,0.526,102,0.674,103,0.444,104,0.571,105,0.444,106,0.674,107,0.484,108,0.674,109,0.444,110,0.571,111,0.674,112,0.674,113,0.043,114,0.043,120,0.83,122,1.849,177,0.871,185,1.473,195,3.677,207,1.518,208,2.967,209,3.554,210,2.869,211,3.369,212,2.967,213,3.554,214,3.554,215,3.554,216,3.369,217,3.389,218,4.036,219,3.369,220,3.369,221,3.369,222,3.369,223,2.083,224,3.554,225,2.395,226,2.967,227,2.395,228,3.554,229,3.554,230,3.554,231,3.554,232,2.083,233,3.667,234,1.818,235,4.174,236,2.395,237,1.818,238,2.395,239,1.818,240,2.454,241,1.818,242,1.818,243,2.869,244,1.818,245,2.869,246,1.818,247,2.395,248,1.818,249,2.869,250,2.869,251,2.869,252,1.818,253,1.818,254,2.395,255,1.818,256,1.849,257,1.818,258,1.818,259,1.818,260,1.818,261,2.395,262,2.395,263,1.849,264,2.967,265,1.818,266,2.967,267,1.518,268,2.395,269,1.818,270,2.869,271,2.869,272,2.869,273,1.818,274,2.869,275,1.663,276,1.818,277,2.869,278,1.818,279,2.869,280,2.869,281,2.869,282,1.818,283,2.967,284,1.818,285,2.967,286,1.818,287,1.518,288,1.818,289,3.548,290,1.518,291,1.518,292,1.518,293,1.818,294,1.518,295,1.818,296,1.518,297,1.518,298,0.978,299,1.518,300,1.818,301,1.818,302,1.704,303,1.818,304,1.818,305,1.818,306,1.818,307,1.518,308,1.518,309,1.818,310,1.818,311,2.395,312,1.518,313,1.518,314,1.518,315,1.818,316,1.818,317,1.518,318,1.818,319,1.518,320,2.395,321,1.32,322,1.518,323,1.518,324,1.518,325,1.518,326,1.32,327,1.518,328,1.818,329,1.518,330,1.518,331,1.518,332,1.518]],["title/interfaces/DataDeviceType.html",[333,1.406,334,2.065]],["body/interfaces/DataDeviceType.html",[3,0.356,4,0.356,9,0.277,19,0.489,24,0.356,25,0.56,39,1.665,44,0.033,46,0.557,66,0.315,67,0.104,87,0.902,113,0.061,114,0.061,120,1.749,177,1.936,181,1.665,185,0.764,192,1.881,263,1.851,298,1.889,302,1.936,333,1.26,334,3.01,335,1.851,336,1.509,337,5.451,338,3.01,339,2.041,340,3.371,341,2.397,342,2.397,343,2.397,344,2.397,345,2.397,346,2.397,347,2.397,348,2.084,349,2.397,350,2.397,351,2.397,352,2.397,353,3.371,354,2.397,355,2.397,356,2.397,357,2.397,358,2.397,359,1.851,360,2.397,361,2.397,362,2.397,363,2.397,364,2.397,365,2.397,366,2.397,367,3.371,368,3.371,369,2.084,370,1.851,371,1.851,372,2.397,373,1.665,374,4.23,375,2.397,376,1.851,377,2.397,378,2.397,379,3.371,380,2.397,381,1.772,382,3.39,383,1.509,384,2.603,385,2.084,386,2.397,387,3.39,388,2.397,389,2.931,390,2.397,391,2.397,392,1.851,393,2.084,394,2.397]],["title/classes/Device.html",[19,0.545,67,0.116]],["body/classes/Device.html",[3,0.385,4,0.385,9,0.299,19,0.935,24,0.603,25,0.591,31,1.233,35,1.53,41,1.088,44,0.033,45,0.935,46,0.66,49,1.135,50,0.976,60,0.982,66,0.468,67,0.113,72,2.633,73,2.213,113,0.064,114,0.064,120,1.712,180,2.593,181,1.801,185,1.135,192,1.252,200,1.489,240,2.242,298,1.06,339,1.718,369,2.255,381,1.363,395,2.593,396,5.242,397,4.376,398,4.265,399,2.823,400,3.107,401,3.107,402,3.107,403,3.107,404,3.107,405,4.265,406,4.265,407,4.265,408,4.265,409,3.107,410,2.593,411,3.107,412,3.107,413,4.265,414,3.107,415,2.044,416,4.065,417,4.87,418,3.107,419,2.593,420,3.107,421,3.107,422,3.107,423,4.87,424,3.107,425,3.107,426,3.107,427,4.265,428,2.255,429,2.593,430,2.255,431,3.107,432,3.107,433,3.096,434,3.107,435,3.107]],["title/classes/DeviceCategories.html",[67,0.116,415,1.535]],["body/classes/DeviceCategories.html",[3,0.329,4,0.329,9,0.256,24,0.329,25,0.53,28,2.369,31,1.105,41,0.971,43,1.2,44,0.033,45,0.65,46,0.491,47,1.2,49,1.302,53,0.707,54,0.768,66,0.42,67,0.096,73,2.293,89,1.2,113,0.058,114,0.058,120,1.74,185,0.707,200,1.274,298,1.768,333,1.166,370,3.154,371,2.463,383,1.397,399,3.41,415,2.485,436,1.929,437,3.735,438,3.735,439,4.084,440,3.19,441,4.642,442,3.489,443,4.084,444,3.552,445,3.19,446,4.084,447,3.19,448,3.19,449,3.19,450,3.19,451,4.751,452,3.19,453,3.19,454,3.19,455,3.19,456,3.19,457,3.19,458,3.19,459,3.19,460,3.19,461,3.19,462,3.19,463,3.19,464,3.19,465,3.19,466,3.19,467,3.19,468,4.506,469,3.19,470,3.19,471,3.19,472,3.19,473,3.19,474,3.19,475,3.19,476,3.19,477,3.19,478,3.19,479,3.19,480,3.19,481,3.19,482,3.19,483,3.19,484,2.774,485,3.19,486,3.19,487,3.19,488,3.19,489,3.19,490,3.19,491,2.657,492,2.657,493,4.642,494,2.657,495,3.248,496,2.218,497,2.657,498,2.657,499,2.657,500,2.657,501,3.19,502,3.19,503,2.218,504,2.218,505,2.218,506,2.218,507,2.218,508,2.218,509,2.218,510,2.218]],["title/interfaces/DeviceCategoriesInterfance.html",[333,1.406,399,1.857]],["body/interfaces/DeviceCategoriesInterfance.html",[3,0.412,4,0.412,9,0.32,24,0.412,25,0.619,28,1.96,44,0.033,46,0.491,66,0.491,67,0.121,73,2.423,89,1.403,113,0.067,114,0.067,120,1.796,185,0.885,298,1.918,333,1.46,335,2.144,370,2.144,371,2.879,383,1.748,399,3.357,415,2.141,436,2.414,437,2.776,438,2.776,439,2.776,440,2.776,441,4.939,442,3.357,443,3.729,444,3.243,445,2.776,446,3.729,447,2.776,448,2.776,449,2.776,450,2.776,451,4.501,452,2.776,453,2.776,454,2.776,455,2.776,456,2.776,457,2.776,458,2.776,459,2.776,460,2.776,461,2.776,462,2.776,463,2.776,464,2.776,465,2.776,466,2.776,467,2.776,468,4.21,469,2.776,470,2.776,471,2.776,472,2.776,473,2.776,474,2.776,475,2.776,476,2.776,477,2.776,478,2.776,479,2.776,480,2.776,481,2.776,482,2.776,483,2.776,484,2.414,485,2.776,486,2.776,487,2.776,488,2.776,489,2.776,490,2.776,493,4.21,495,3.243,501,3.729,502,3.729,503,2.776,504,2.776,505,2.776,506,2.776,507,2.776,508,2.776,509,2.776,510,2.776]],["title/classes/DeviceList.html",[67,0.116,511,2.065]],["body/classes/DeviceList.html",[3,0.495,4,0.495,9,0.385,19,1.082,24,0.495,25,0.698,31,1.456,41,1.083,43,1.255,44,0.033,45,0.68,46,0.553,47,1.255,49,1.466,50,1.581,53,1.063,54,1.156,60,0.748,66,0.439,67,0.183,82,2.646,101,1.156,113,0.076,114,0.076,200,1.916,256,2.576,275,2.317,298,1.363,397,4.829,428,3.654,511,3.844,512,3.336,513,5.034,514,3.997,515,3.997,516,3.997,517,5.034,518,3.997,519,3.997,520,3.997,521,3.336,522,3.997,523,3.997,524,3.997,525,3.997,526,3.997]],["title/components/DeviceOperationsComponent.html",[0,0.309,96,0.783]],["body/components/DeviceOperationsComponent.html",[0,0.454,1,0.6,2,1.133,3,0.447,4,0.304,5,0.91,6,0.91,7,0.91,8,0.837,9,0.237,15,0.91,16,2.196,17,2.021,18,1.336,19,1.019,20,1.337,22,1.337,24,0.53,25,0.5,31,1.043,32,3.57,33,2.26,35,0.771,40,1.945,41,1.064,43,0.771,44,0.033,45,0.855,46,0.552,47,0.771,49,1.336,50,1.577,53,1.138,54,1.237,60,0.94,61,0.551,65,1.291,66,0.27,67,0.089,73,1.723,77,1.583,78,1.177,82,1.896,85,0.91,86,1.337,87,1.133,88,0.91,89,1.481,90,0.91,91,1.337,92,0.6,93,0.91,94,0.6,95,0.91,96,1.153,97,0.91,98,0.6,99,0.91,100,0.6,101,1.452,102,0.91,103,0.6,104,0.771,105,0.6,106,0.91,107,0.653,108,0.91,109,0.6,110,0.771,111,0.91,112,0.91,167,3.724,181,1.423,185,1.444,192,1.899,196,3.012,240,1.291,339,2.243,381,1.077,415,2.05,495,3.105,511,2.757,527,4.823,528,2.05,529,4.277,530,3.608,531,3.57,532,4.277,533,3.935,534,2.05,535,3.608,536,2.455,537,2.455,538,2.455,539,2.455,540,2.455,541,2.455,542,2.455,543,2.05,544,2.455,545,2.455,546,2.455,547,2.05,548,1.782,549,2.455,550,2.455,551,3.608,552,3.608,553,3.608,554,3.608,555,3.608,556,3.608,557,3.608,558,2.455,559,3.608,560,3.608,561,3.608,562,3.608,563,2.455,564,3.608,565,3.608,566,3.608,567,2.455,568,2.455]],["title/classes/DeviceTypes.html",[67,0.116,339,1.29]],["body/classes/DeviceTypes.html",[3,0.279,4,0.279,9,0.217,19,0.577,24,0.279,25,0.47,31,0.979,39,1.963,41,0.907,43,1.064,44,0.033,45,0.577,46,0.597,47,1.064,49,1.203,50,0.708,53,0.6,54,0.652,66,0.248,67,0.082,87,0.708,113,0.051,114,0.051,120,1.734,177,1.624,181,1.307,185,0.6,192,1.639,200,1.081,263,1.454,298,1.801,302,1.624,333,0.99,334,2.622,336,1.185,337,5.476,338,3.124,339,1.953,340,4.046,341,2.827,342,2.827,343,2.827,344,2.827,345,2.827,346,2.827,347,2.827,348,2.459,349,2.827,350,2.827,351,2.827,352,2.827,353,3.775,354,2.827,355,2.827,356,2.827,357,2.827,358,2.827,359,2.183,360,2.827,361,2.827,362,2.827,363,2.827,364,2.827,365,2.827,366,2.827,367,3.396,368,2.827,369,2.459,370,2.915,371,1.454,372,1.883,373,1.307,374,4.046,375,2.827,376,2.183,377,1.883,378,1.883,379,2.827,380,2.827,381,1.486,382,3.283,383,1.185,384,2.183,385,1.637,386,1.883,387,2.953,388,1.883,389,2.459,390,1.883,391,1.883,392,1.454,393,1.637,394,1.883,569,2.459,570,3.387,571,2.255,572,2.255,573,2.255,574,2.255,575,1.185,576,2.255]],["title/components/DevicesComponent.html",[0,0.309,98,0.783]],["body/components/DevicesComponent.html",[0,0.522,1,0.94,2,1.543,3,0.477,4,0.477,5,1.425,6,1.425,7,1.425,8,1.312,9,0.371,15,1.425,16,2.368,17,2.18,18,1.023,19,0.655,20,1.82,22,1.82,44,0.032,45,0.836,60,0.72,61,0.863,66,0.423,67,0.14,85,1.425,86,1.82,87,1.543,88,1.425,89,1.792,90,1.425,91,1.82,92,0.94,93,1.425,94,0.94,95,1.425,96,0.94,97,1.425,98,1.395,99,1.425,100,0.94,101,1.705,102,1.425,103,0.94,104,1.208,105,0.94,106,1.425,107,1.023,108,1.425,109,0.94,110,1.208,111,1.425,112,1.425,113,0.074,114,0.074,577,3.211,578,4.914,579,4.914,580,5.415,581,4.914,582,3.847,583,4.914]],["title/components/DevicesListComponent.html",[0,0.309,100,0.783]],["body/components/DevicesListComponent.html",[0,0.469,1,0.558,2,1.073,3,0.508,4,0.283,5,0.845,6,0.845,7,0.845,8,0.778,9,0.22,13,1.981,14,2.375,15,0.845,16,2.162,17,1.991,18,1.09,19,0.697,20,1.266,22,1.266,24,0.423,25,0.474,28,1.798,29,2.529,31,0.988,33,2.18,35,1.073,38,4.046,39,3.231,40,2.065,41,0.992,43,1.073,44,0.033,45,0.87,46,0.599,47,1.073,49,1.21,50,1.287,53,0.607,54,0.66,60,0.912,61,0.512,62,1.471,64,1.323,65,1.199,66,0.251,67,0.083,69,2.153,72,2.18,73,1.832,77,2.203,78,1.638,80,1.656,81,1.656,82,2.153,85,0.845,86,1.266,87,1.073,88,0.845,89,1.429,90,0.845,91,1.266,92,0.558,93,0.845,94,0.558,95,0.845,96,0.558,97,0.845,98,0.558,99,0.845,100,1.409,101,1.641,102,0.845,103,0.558,104,1.287,105,0.558,106,0.845,107,0.607,108,0.845,109,0.558,110,0.717,111,0.845,112,0.845,113,0.051,114,0.051,162,3.514,192,0.919,298,1.551,302,2.18,348,1.656,373,2.824,433,2.974,442,2.637,575,1.796,584,4.55,585,1.905,586,4.096,587,3.417,588,4.549,589,2.852,590,4.549,591,2.282,592,2.282,593,3.417,594,3.417,595,2.282,596,3.417,597,2.282,598,2.282,599,2.282,600,2.282,601,2.282,602,1.905,603,2.282,604,2.282,605,2.282,606,2.282,607,2.282,608,2.282,609,2.282,610,2.282,611,2.282,612,1.905,613,3.417,614,3.417,615,3.417,616,3.417,617,3.417,618,3.417]],["title/injectables/DevicesService.html",[29,1.406,619,1.535]],["body/injectables/DevicesService.html",[3,0.283,4,0.283,9,0.22,18,0.91,19,0.966,24,0.283,25,0.474,29,1.997,31,0.989,35,0.718,41,1.093,43,1.666,44,0.033,45,0.903,46,0.655,47,1.666,49,1.451,50,1.074,53,1.091,54,1.185,60,0.913,61,0.512,66,0.251,67,0.083,72,2.614,78,1.64,101,1.577,113,0.051,114,0.051,116,1.473,120,1.688,145,1.659,156,1.659,183,4.068,185,0.91,298,1.902,302,1.64,359,1.473,373,1.324,392,1.473,442,2.638,531,3.799,543,1.907,548,1.659,575,1.798,589,2.855,619,1.64,620,1.473,621,1.907,622,3.422,623,4.1,624,3.304,625,3.42,626,3.42,627,3.42,628,3.42,629,1.907,630,3.799,631,3.42,632,3.422,633,3.42,634,2.285,635,2.285,636,3.42,637,2.285,638,6.009,639,3.42,640,2.285,641,3.42,642,2.285,643,3.42,644,3.713,645,2.285,646,2.285,647,2.855,648,2.285,649,2.855,650,2.285,651,4.1,652,4.1,653,3.42,654,3.42,655,2.285,656,3.42,657,1.907,658,2.285,659,2.285,660,2.285,661,1.659,662,4.068,663,3.42,664,4.874,665,4.874,666,4.552,667,2.285,668,3.42,669,3.42,670,3.42,671,3.42,672,2.285,673,2.285,674,2.285,675,4.552,676,2.285,677,2.285,678,2.285,679,3.42,680,2.285,681,1.907,682,2.285,683,2.285,684,2.285]],["title/components/EditDeviceComponent.html",[0,0.309,103,0.783]],["body/components/EditDeviceComponent.html",[0,0.438,1,0.477,2,0.953,3,0.461,4,0.242,5,0.723,6,0.723,7,0.723,8,0.666,9,0.188,12,1.417,13,1.759,14,2.157,15,0.723,16,2.087,17,1.922,18,0.99,19,0.907,20,1.124,21,3.106,22,1.124,23,2.532,24,0.242,25,0.421,28,2.111,29,2.391,30,3.793,31,0.877,33,2.011,34,3.502,35,0.953,37,3.793,38,3.644,39,2.91,40,1.86,41,1.092,43,1.169,44,0.033,45,0.907,46,0.652,47,1.169,48,1.63,49,1.209,50,1.427,53,0.99,54,1.076,56,3.106,58,1.63,60,0.998,61,0.438,62,1.258,63,1.956,64,1.132,65,1.026,66,0.214,67,0.071,69,2.205,71,2.532,72,2.305,73,2.147,77,1.956,78,1.454,80,1.417,81,1.417,82,1.026,85,0.723,86,1.124,87,0.953,88,0.723,89,1.318,90,0.723,91,1.124,92,0.477,93,0.723,94,0.477,95,0.723,96,0.477,97,0.723,98,0.477,99,0.723,100,0.477,101,0.565,102,0.723,103,1.026,104,1.711,105,0.477,106,0.723,107,0.519,108,0.723,109,0.477,110,0.613,111,0.723,112,0.723,113,0.046,114,0.046,120,0.877,165,3.794,185,1.116,192,1.222,232,2.202,298,1.035,339,2.091,415,2.487,433,2.701,547,1.63,602,1.63,612,1.63,644,2.202,647,1.63,685,4.914,686,3.721,687,3.721,688,3.034,689,3.034,690,4.196,691,1.952,692,4.196,693,1.952,694,3.034,695,3.034,696,1.952,697,3.034,698,3.034,699,1.952,700,1.952,701,1.952,702,1.952,703,1.952,704,1.952,705,1.952,706,1.952,707,1.952,708,1.952,709,1.952,710,1.952,711,1.952,712,1.952,713,1.952,714,1.952,715,1.952,716,1.952,717,1.952,718,1.952,719,4.196,720,1.952,721,3.034,722,1.952,723,1.952,724,4.196,725,3.721,726,1.952,727,3.034,728,2.202,729,1.952,730,1.952,731,1.952,732,1.952,733,1.952,734,1.952,735,1.952,736,1.952,737,1.952,738,1.952,739,1.952,740,1.952,741,3.034,742,2.532]],["title/components/HomeComponent.html",[0,0.309,105,0.783]],["body/components/HomeComponent.html",[0,0.469,1,0.758,2,1.338,3,0.384,4,0.384,5,1.149,6,1.149,7,1.149,8,1.058,9,0.299,15,1.149,16,2.292,17,2.109,18,0.825,19,0.528,20,1.578,22,1.578,24,0.384,25,0.59,31,1.232,33,2.511,35,0.974,41,1.062,43,1.528,44,0.033,45,1.007,46,0.603,47,1.528,49,1.295,50,1.338,60,0.798,61,0.695,66,0.341,67,0.112,85,1.149,86,1.578,87,1.338,88,1.149,89,1.645,90,1.149,91,1.578,92,0.758,93,1.149,94,0.758,95,1.149,96,0.758,97,1.149,98,0.758,99,1.149,100,0.758,101,0.897,102,1.149,103,0.758,104,0.974,105,1.281,106,1.149,107,0.825,108,1.149,109,0.758,110,0.974,111,1.149,112,1.149,113,0.064,114,0.064,120,1.515,145,2.251,194,3.556,223,3.092,289,3.092,376,2.746,442,2.469,548,2.251,629,2.589,630,4.373,632,3.556,662,2.589,743,2.589,744,4.866,745,4.26,746,5.491,747,4.866,748,4.26,749,4.26,750,4.26,751,3.101,752,4.26,753,3.101,754,4.26,755,3.101,756,3.101,757,3.101,758,3.101,759,3.101,760,3.101,761,3.101,762,3.101,763,4.26,764,4.26]],["title/components/LogComponent.html",[0,0.309,107,0.852]],["body/components/LogComponent.html",[0,0.542,1,0.812,2,1.401,3,0.411,4,0.411,5,1.23,6,1.23,7,1.23,8,1.132,9,0.32,15,1.23,16,2.317,17,2.133,18,0.883,19,0.565,20,1.653,22,1.653,24,0.411,25,0.618,28,1.958,35,1.043,40,2.256,41,0.835,43,1.043,44,0.033,45,0.858,46,0.49,47,1.043,60,0.835,61,0.744,65,1.745,66,0.365,67,0.12,73,1.797,78,2.138,85,1.23,86,1.653,87,1.401,88,1.23,89,1.692,90,1.23,91,1.653,92,0.812,93,1.23,94,0.812,95,1.23,96,0.812,97,1.23,98,0.812,99,1.23,100,0.812,101,0.96,102,1.23,103,0.812,104,1.043,105,0.812,106,1.23,107,1.433,108,1.23,109,0.812,110,1.043,111,1.23,112,1.23,113,0.067,114,0.067,534,2.771,624,3.239,765,2.771,766,3.724,767,5.039,768,4.461,769,3.32,770,3.32,771,3.32,772,4.461,773,3.239,774,4.461,775,4.461,776,4.461,777,4.461,778,4.461,779,3.724]],["title/injectables/LogService.html",[40,1.187,619,1.535]],["body/injectables/LogService.html",[0,0.548,3,0.426,4,0.426,9,0.331,18,1.364,24,0.426,25,0.633,31,1.32,35,1.611,40,2.024,41,1.065,43,1.08,44,0.033,45,0.585,46,0.642,47,1.08,49,1.215,50,1.434,53,0.915,54,0.994,60,0.855,61,0.771,66,0.563,67,0.166,72,2.726,73,2.291,78,2.803,113,0.069,114,0.069,116,2.216,120,1.752,192,1.385,235,3.722,240,1.807,302,1.648,373,1.993,381,1.508,416,4.561,575,2.4,619,2.189,620,2.216,624,3.966,661,2.495,766,4.561,773,3.315,780,2.495,781,4.567,782,3.437,783,3.437,784,3.437,785,3.437,786,4.561,787,3.315,788,3.437,789,3.437,790,3.437]],["title/injectables/MarkdownService.html",[619,1.535,791,2.325]],["body/injectables/MarkdownService.html",[3,0.591,4,0.591,9,0.46,35,1.871,41,0.894,44,0.032,60,0.894,61,1.07,66,0.524,67,0.173,113,0.084,114,0.084,116,3.077,619,2.689,620,3.077,661,3.465,791,4.072,792,3.984,793,4.773]],["title/components/ModelComponent.html",[0,0.309,109,0.783]],["body/components/ModelComponent.html",[0,0.367,1,0.402,2,0.831,3,0.204,4,0.204,5,0.981,6,0.609,7,0.609,8,0.56,9,0.158,13,1.534,14,1.927,15,0.609,16,1.997,17,1.838,18,0.437,19,0.28,20,0.981,22,0.981,24,0.204,25,0.619,28,1.459,31,0.765,33,1.827,35,1.044,41,1.131,44,0.033,45,0.451,46,0.618,49,1.188,50,1.402,53,1.112,54,1.208,60,0.782,61,0.369,66,0.181,67,0.06,69,3.397,85,0.609,86,0.981,87,1.044,88,0.609,89,1.312,90,0.609,91,0.981,92,0.402,93,0.609,94,0.813,95,0.609,96,0.402,97,0.609,98,0.402,99,0.609,100,0.402,101,0.475,102,0.609,103,0.402,104,0.516,105,0.402,106,0.609,107,0.437,108,0.609,109,1.148,110,1.534,111,0.609,112,0.609,113,0.04,114,0.04,122,1.706,177,0.788,185,1.496,192,0.662,208,2.774,211,3.181,212,2.774,216,3.488,217,3.408,219,3.181,220,3.181,221,3.181,222,3.181,223,1.922,225,2.21,226,2.774,227,2.21,232,1.922,233,3.488,235,3.408,236,1.372,238,2.21,240,2.347,247,1.372,254,2.21,256,2.456,261,2.21,262,2.21,263,1.706,264,2.774,266,2.774,267,1.372,268,2.21,283,2.774,285,2.774,287,1.372,289,1.922,290,1.372,291,1.372,292,1.372,294,1.372,296,1.372,297,1.372,298,0.903,299,1.372,302,1.827,307,1.372,308,1.372,311,2.21,312,1.372,313,1.372,314,1.372,317,1.372,319,1.372,320,2.21,321,1.193,322,1.372,323,1.372,324,1.372,325,1.372,326,1.193,327,1.372,329,1.372,330,1.372,331,1.372,332,1.372,381,1.162,430,3.241,728,2.766,794,1.372,795,3.324,796,2.647,797,3.324,798,4.178,799,3.324,800,3.324,801,3.324,802,3.324,803,3.324,804,3.324,805,3.324,806,3.811,807,1.643,808,1.643,809,1.643,810,1.643,811,1.643,812,1.643,813,1.643,814,1.643,815,1.643,816,1.643,817,2.647,818,1.643,819,1.643,820,1.643,821,3.324,822,1.643,823,1.643,824,2.647,825,1.643,826,4.884,827,1.643,828,1.643,829,1.643,830,1.643,831,3.324,832,1.643,833,1.643,834,1.643,835,1.643,836,1.643,837,3.324,838,1.643,839,1.643,840,2.647,841,1.643,842,1.643,843,1.643,844,2.647,845,1.643,846,1.643,847,1.643,848,1.643,849,1.643,850,1.643,851,1.643,852,1.643,853,1.643,854,1.643,855,1.643,856,1.643,857,1.643,858,1.643,859,1.643,860,1.372,861,1.643,862,1.643,863,1.643,864,1.643,865,1.643,866,1.643,867,1.643,868,1.643,869,1.643,870,1.643,871,1.643,872,1.643,873,1.643,874,1.643,875,1.643,876,1.643,877,1.643,878,1.643,879,1.643,880,1.643,881,1.643,882,1.643,883,1.643,884,1.643,885,1.643,886,1.643,887,1.643,888,1.643,889,3.811,890,3.181,891,1.643,892,1.643,893,1.643,894,1.643,895,1.643,896,1.643,897,1.643,898,3.324,899,1.643,900,1.643,901,1.643,902,1.643,903,1.643,904,1.643,905,1.643,906,1.643]],["title/coverage.html",[907,3.635]],["body/coverage.html",[0,0.59,1,0.786,9,0.31,10,2.684,11,2.073,12,3.17,19,0.547,29,1.411,40,1.191,44,0.032,46,0.353,67,0.202,92,0.786,94,0.786,96,0.786,98,0.786,100,0.786,103,0.786,105,0.786,107,0.856,109,0.786,113,0.066,114,0.066,115,2.684,162,2.073,165,2.073,167,2.073,177,2.549,185,0.856,199,2.334,201,2.684,207,2.684,333,1.916,334,2.073,336,2.923,339,1.295,381,2.861,383,1.69,384,2.073,395,2.684,399,1.864,415,1.541,430,2.334,436,3.17,511,2.073,512,2.684,527,2.684,528,2.684,569,2.334,577,2.684,584,2.684,585,2.684,619,2.376,621,2.684,685,2.684,743,2.684,765,2.684,780,2.334,787,2.334,791,2.334,792,2.684,794,2.684,907,2.684,908,3.216,909,3.216,910,3.216,911,4.958,912,3.216,913,4.367,914,3.216,915,3.216,916,3.216,917,3.216,918,6.175,919,3.216,920,4.367,921,4.367,922,3.216,923,3.216,924,4.367,925,3.216,926,3.216,927,3.216,928,3.216,929,4.897,930,3.645,931,2.684,932,3.216,933,3.17,934,2.684,935,2.334,936,2.684,937,3.645,938,2.684,939,3.645,940,2.684,941,2.684,942,3.216,943,3.216]],["title/dependencies.html",[127,2.48,944,2.24]],["body/dependencies.html",[44,0.033,61,0.93,63,2.674,64,2.405,113,0.078,114,0.078,122,2.674,127,2.674,143,4.68,149,4.302,150,3.741,657,3.463,945,4.149,946,6.349,947,4.149,948,4.149,949,4.149,950,4.149,951,4.149,952,4.149,953,3.463,954,4.149,955,4.149,956,4.149,957,4.149,958,4.149,959,4.149,960,4.149,961,4.149,962,4.149,963,3.463,964,5.153,965,4.149,966,4.149,967,4.149,968,4.149,969,4.149,970,4.149,971,4.149,972,4.149,973,4.149,974,4.149,975,4.149,976,4.149,977,4.149,978,4.149,979,4.149]],["title/miscellaneous/functions.html",[980,1.41,981,2.793]],["body/miscellaneous/functions.html",[24,0.545,43,1.807,44,0.031,45,0.979,46,0.587,47,1.807,49,1.421,113,0.08,114,0.08,120,1.773,336,2.313,338,3.444,382,3.878,387,3.878,393,3.194,569,3.878,773,3.878,787,4.344,930,3.673,931,4.46,933,3.194,934,4.46,980,2.313,981,3.194,982,5.343,983,3.673,984,3.194,985,4.4,986,4.4,987,4.4,988,4.4,989,4.4]],["title/index.html",[24,0.332,990,2.683,991,2.683]],["body/index.html",[0,0.364,2,1.186,8,0.891,9,0.364,18,1.179,25,0.523,41,0.489,44,0.03,45,0.643,46,0.533,53,0.695,60,0.489,66,0.415,67,0.095,69,1.374,83,2.182,92,0.639,104,0.821,110,0.821,113,0.057,114,0.057,121,4.299,124,1.897,125,1.515,126,1.374,139,2.182,141,1.897,146,1.897,151,2.182,152,2.182,155,3.152,156,3.218,174,2.182,177,1.81,179,2.182,185,1.005,195,2.741,200,2.125,217,1.897,240,1.374,256,1.685,275,1.515,321,4.487,326,3.525,333,1.147,335,1.685,359,2.434,376,2.434,389,1.897,410,4.48,419,2.182,428,1.897,429,2.182,444,1.897,484,1.897,496,2.182,533,2.182,622,2.182,644,2.741,649,2.182,681,3.152,742,2.182,779,2.182,929,2.182,935,2.741,953,3.152,963,2.182,981,1.897,992,5.15,993,3.776,994,2.613,995,3.776,996,3.776,997,2.613,998,5.15,999,2.613,1000,2.613,1001,2.613,1002,3.776,1003,2.613,1004,2.613,1005,2.613,1006,2.613,1007,2.613,1008,2.613,1009,2.613,1010,2.613,1011,2.613,1012,2.613,1013,2.613,1014,2.613,1015,3.776,1016,2.613,1017,2.613,1018,2.613,1019,4.433,1020,2.613,1021,2.613,1022,2.613,1023,3.776,1024,4.433,1025,2.613,1026,2.613,1027,2.613,1028,2.613,1029,2.613,1030,2.613,1031,2.613,1032,4.433,1033,2.613,1034,2.613,1035,2.613,1036,2.613,1037,2.613,1038,3.776,1039,2.613,1040,2.613,1041,2.613,1042,2.613,1043,2.613,1044,2.613,1045,2.613,1046,2.613,1047,2.613,1048,2.613,1049,3.776,1050,2.613,1051,3.776,1052,2.613,1053,3.776,1054,2.613,1055,2.613,1056,3.776,1057,2.613,1058,2.613,1059,3.776,1060,3.776,1061,2.613,1062,2.613,1063,3.776,1064,2.613,1065,1.897,1066,2.613,1067,2.613,1068,2.613,1069,2.613,1070,2.613,1071,2.613,1072,3.776,1073,2.613,1074,2.613,1075,2.613,1076,2.613,1077,3.776,1078,2.613,1079,2.613,1080,2.613,1081,3.776,1082,2.613,1083,2.613,1084,3.776,1085,2.613,1086,2.613,1087,2.613,1088,2.613,1089,2.613,1090,2.613,1091,2.613,1092,2.613,1093,2.613,1094,2.613,1095,2.613,1096,3.776,1097,2.613,1098,2.613,1099,2.613,1100,3.776,1101,3.776,1102,2.613,1103,2.613,1104,2.613,1105,2.613,1106,2.613,1107,2.613,1108,2.613,1109,2.613,1110,2.613,1111,3.776,1112,2.613,1113,2.613,1114,2.613,1115,2.613,1116,2.613,1117,3.776,1118,2.613,1119,2.613,1120,4.433,1121,2.613,1122,2.613,1123,2.613,1124,2.613,1125,2.613,1126,2.613,1127,2.613,1128,2.613,1129,2.613,1130,2.613,1131,2.613,1132,3.776,1133,2.613,1134,3.776,1135,2.613,1136,2.613,1137,2.613,1138,2.613,1139,2.613,1140,2.613,1141,3.776,1142,2.613,1143,2.613,1144,2.613,1145,3.776,1146,2.613,1147,2.613]],["title/modules.html",[126,2.289]],["body/modules.html",[44,0.028,113,0.087,114,0.087,125,2.893,126,2.624,134,2.893,150,3.623,1148,4.992,1149,4.992,1150,5.757,1151,4.992,1152,4.992]],["title/overview.html",[1153,3.635]],["body/overview.html",[1,1.32,2,1.2,29,2.369,40,2,44,0.032,92,1.496,94,1.32,96,1.32,98,1.496,100,1.32,103,1.32,105,1.32,107,1.436,109,1.32,113,0.074,114,0.074,125,3.842,126,2.009,127,3.154,128,3.19,129,3.19,130,3.19,131,3.19,132,3.19,133,3.19,134,3.129,135,4.085,136,3.19,137,3.19,191,2.463,200,1.832,275,2.836,335,2.463,521,3.19,620,2.463,890,3.19,1153,3.19,1154,3.19,1155,3.822]],["title/properties.html",[25,0.533,944,2.24]],["body/properties.html",[25,0.704,44,0.03,113,0.088,114,0.088,1156,5.079,1157,5.079]],["title/routes.html",[191,2.807]],["body/routes.html",[44,0.029,113,0.088,114,0.088,191,3.302]],["title/miscellaneous/typealiases.html",[980,1.41,1158,3.848]],["body/miscellaneous/typealiases.html",[24,0.606,44,0.028,46,0.661,113,0.086,114,0.086,336,2.572,338,3.669,339,1.971,575,2.992,780,3.552,786,4.751,980,2.572,984,3.552,1159,4.893,1160,4.893]],["title/miscellaneous/variables.html",[980,1.41,1065,2.793]],["body/miscellaneous/variables.html",[24,0.504,44,0.032,45,0.946,46,0.672,53,1.627,54,1.769,113,0.077,114,0.077,185,1.083,275,2.36,336,2.14,339,1.64,381,1.787,383,2.677,384,3.283,385,2.955,392,3.283,575,2.677,728,3.697,860,3.398,933,2.955,935,3.697,936,3.398,937,4.862,938,3.398,939,3.398,940,4.252,941,4.252,980,2.14,983,3.398,984,3.697,1065,2.955,1154,3.398,1161,5.093,1162,4.071,1163,4.071,1164,4.071,1165,4.071,1166,5.093,1167,4.071,1168,5.558,1169,4.071,1170,4.071]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":381,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.004",{"_index":245,"title":{},"body":{"components/CubeComponent.html":{}}}],["0.005",{"_index":846,"title":{},"body":{"components/ModelComponent.html":{}}}],["0.015",{"_index":243,"title":{},"body":{"components/CubeComponent.html":{}}}],["0.13.0",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["0.149.0",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1157,"title":{},"body":{"properties.html":{}}}],["0.4",{"_index":884,"title":{},"body":{"components/ModelComponent.html":{}}}],["0/1",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":852,"title":{},"body":{"components/ModelComponent.html":{}}}],["1",{"_index":240,"title":{},"body":{"components/CubeComponent.html":{},"classes/Device.html":{},"components/DeviceOperationsComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["1.1.19",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":890,"title":{},"body":{"components/ModelComponent.html":{},"overview.html":{}}}],["100",{"_index":430,"title":{},"body":{"classes/Device.html":{},"components/ModelComponent.html":{},"coverage.html":{}}}],["1000",{"_index":238,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["12",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["14.0.1",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["15.0.0",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["15.1.2",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":275,"title":{},"body":{"components/CubeComponent.html":{},"classes/DeviceList.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["2.11.7",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":250,"title":{},"body":{"components/CubeComponent.html":{}}}],["2.5.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":247,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["3",{"_index":521,"title":{},"body":{"classes/DeviceList.html":{},"overview.html":{}}}],["3.6.4",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["3/24",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":902,"title":{},"body":{"components/ModelComponent.html":{}}}],["3d",{"_index":992,"title":{},"body":{"index.html":{}}}],["4.14.192",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["4/25",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":236,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["5",{"_index":1154,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":898,"title":{},"body":{"components/ModelComponent.html":{}}}],["7",{"_index":1155,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":1066,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":850,"title":{},"body":{"components/ModelComponent.html":{}}}],["access",{"_index":730,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["accessors",{"_index":232,"title":{},"body":{"components/CubeComponent.html":{},"components/EditDeviceComponent.html":{},"components/ModelComponent.html":{}}}],["action",{"_index":1146,"title":{},"body":{"index.html":{}}}],["activatedroute",{"_index":692,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["actroute",{"_index":694,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["actual_component",{"_index":112,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["add",{"_index":18,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["add(device",{"_index":633,"title":{},"body":{"injectables/DevicesService.html":{}}}],["add(undefined",{"_index":782,"title":{},"body":{"injectables/LogService.html":{}}}],["adddevice",{"_index":32,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/DeviceOperationsComponent.html":{}}}],["adddevicecomponent",{"_index":1,"title":{"components/AddDeviceComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["added",{"_index":76,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["addform",{"_index":588,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["adjectives",{"_index":405,"title":{},"body":{"classes/Device.html":{}}}],["afterviewinit",{"_index":208,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["aliases",{"_index":1159,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ambientlight",{"_index":797,"title":{},"body":{"components/ModelComponent.html":{}}}],["angular",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/DevicesService.html":{},"components/HomeComponent.html":{}}}],["angular/compiler",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":61,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":63,"title":{},"body":{"components/AddDeviceComponent.html":{},"modules/AppModule.html":{},"components/EditDeviceComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":64,"title":{},"body":{"components/AddDeviceComponent.html":{},"modules/AppRoutingModule.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"dependencies.html":{}}}],["animals",{"_index":406,"title":{},"body":{"classes/Device.html":{}}}],["animate",{"_index":254,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["animatecube",{"_index":218,"title":{},"body":{"components/CubeComponent.html":{}}}],["animatemodel",{"_index":806,"title":{},"body":{"components/ModelComponent.html":{}}}],["antialias",{"_index":904,"title":{},"body":{"components/ModelComponent.html":{}}}],["api",{"_index":1024,"title":{},"body":{"index.html":{}}}],["apimodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["apimodule.forroot(getapiconfiguration",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["apimodule.forroot(identityservice.getapiconfiguration",{"_index":1031,"title":{},"body":{"index.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["app.component",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":92,"title":{"components/AppComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["apples",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":654,"title":{},"body":{"injectables/DevicesService.html":{}}}],["appmodule",{"_index":125,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":484,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"index.html":{}}}],["approutingmodule",{"_index":134,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arr",{"_index":989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":387,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"miscellaneous/functions.html":{}}}],["arrays",{"_index":1104,"title":{},"body":{"index.html":{}}}],["articles",{"_index":1133,"title":{},"body":{"index.html":{}}}],["aspectratio",{"_index":311,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["assets/r710",{"_index":249,"title":{},"body":{"components/CubeComponent.html":{}}}],["assumptions",{"_index":1095,"title":{},"body":{"index.html":{}}}],["async",{"_index":747,"title":{},"body":{"components/HomeComponent.html":{}}}],["authentication",{"_index":1028,"title":{},"body":{"index.html":{}}}],["auto",{"_index":1079,"title":{},"body":{"index.html":{}}}],["available",{"_index":1152,"title":{},"body":{"modules.html":{}}}],["await",{"_index":758,"title":{},"body":{"components/HomeComponent.html":{}}}],["balancer",{"_index":349,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["bananas",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base_path",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["baseurl",{"_index":622,"title":{},"body":{"injectables/DevicesService.html":{},"index.html":{}}}],["big_red_donkey",{"_index":422,"title":{},"body":{"classes/Device.html":{}}}],["boolean",{"_index":496,"title":{},"body":{"classes/DeviceCategories.html":{},"index.html":{}}}],["bootstrap",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bootstrap.tab(triggerel",{"_index":562,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["bootstrap/ng",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["box",{"_index":866,"title":{},"body":{"components/ModelComponent.html":{}}}],["box.getcenter(this.model.position",{"_index":868,"title":{},"body":{"components/ModelComponent.html":{}}}],["bridge",{"_index":341,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["browse",{"_index":1150,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":199,"title":{"classes/Bug.html":{}},"body":{"classes/Bug.html":{},"coverage.html":{}}}],["bugs.json",{"_index":1039,"title":{},"body":{"index.html":{}}}],["building",{"_index":467,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["buildings",{"_index":452,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["camelcase",{"_index":1063,"title":{},"body":{"index.html":{}}}],["camera",{"_index":211,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["cameraz",{"_index":224,"title":{},"body":{"components/CubeComponent.html":{}}}],["canvas",{"_index":233,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["canvasref",{"_index":212,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["carriers",{"_index":449,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["cases",{"_index":463,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["catch",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["catcherror",{"_index":659,"title":{},"body":{"injectables/DevicesService.html":{}}}],["catcherror(this.errorhandl",{"_index":665,"title":{},"body":{"injectables/DevicesService.html":{}}}],["category",{"_index":73,"title":{},"body":{"components/AddDeviceComponent.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{}}}],["category)?.category",{"_index":508,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["ceilings",{"_index":457,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["center",{"_index":451,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["centers",{"_index":443,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["change",{"_index":1051,"title":{},"body":{"index.html":{}}}],["changecategory",{"_index":688,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["changecategory(e",{"_index":695,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["changedetection",{"_index":578,"title":{},"body":{"components/DevicesComponent.html":{}}}],["changedetectionstrategy",{"_index":582,"title":{},"body":{"components/DevicesComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":579,"title":{},"body":{"components/DevicesComponent.html":{}}}],["changes",{"_index":1046,"title":{},"body":{"index.html":{}}}],["changetype",{"_index":689,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["changetype(e",{"_index":698,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["check",{"_index":388,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["checker",{"_index":1076,"title":{},"body":{"index.html":{}}}],["cherries",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chosentypeobj",{"_index":686,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["class",{"_index":67,"title":{"classes/Bug.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"classes/DeviceTypes.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":200,"title":{},"body":{"classes/Bug.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"classes/DeviceTypes.html":{},"index.html":{},"overview.html":{}}}],["clear",{"_index":624,"title":{},"body":{"injectables/DevicesService.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{}}}],["cli",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/DevicesService.html":{},"index.html":{}}}],["client/src/api.module",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["clientgenerate",{"_index":1016,"title":{},"body":{"index.html":{}}}],["climates",{"_index":487,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["clone",{"_index":1009,"title":{},"body":{"index.html":{}}}],["closures",{"_index":1110,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":681,"title":{},"body":{"injectables/DevicesService.html":{},"index.html":{}}}],["cold",{"_index":486,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["colors",{"_index":407,"title":{},"body":{"classes/Device.html":{}}}],["come",{"_index":1093,"title":{},"body":{"index.html":{}}}],["comments",{"_index":1117,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":1108,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.animatecube",{"_index":328,"title":{},"body":{"components/CubeComponent.html":{}}}],["component.animatemodel",{"_index":905,"title":{},"body":{"components/ModelComponent.html":{}}}],["component.camera",{"_index":330,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["component.renderer.render(component.scene",{"_index":329,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["component_template",{"_index":90,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"index.html":{},"overview.html":{}}}],["components/add",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/devices",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/edit",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["configuration",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["connections",{"_index":446,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["connectivity",{"_index":440,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["consider",{"_index":1096,"title":{},"body":{"index.html":{}}}],["consistency",{"_index":1106,"title":{},"body":{"index.html":{}}}],["consists",{"_index":999,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{}}}],["console.log('device",{"_index":75,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["console.log('generate",{"_index":432,"title":{},"body":{"classes/Device.html":{}}}],["console.log(errormessage",{"_index":684,"title":{},"body":{"injectables/DevicesService.html":{}}}],["console.log(i",{"_index":434,"title":{},"body":{"classes/Device.html":{}}}],["console.log(this.md",{"_index":763,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.model",{"_index":865,"title":{},"body":{"components/ModelComponent.html":{}}}],["const",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"classes/Device.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{}}}],["constructor(actroute",{"_index":691,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["constructor(devicesservice",{"_index":591,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["constructor(fb",{"_index":36,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["constructor(http",{"_index":629,"title":{},"body":{"injectables/DevicesService.html":{},"components/HomeComponent.html":{}}}],["constructor(logservice",{"_index":534,"title":{},"body":{"components/DeviceOperationsComponent.html":{},"components/LogComponent.html":{}}}],["constructor(private",{"_index":548,"title":{},"body":{"components/DeviceOperationsComponent.html":{},"injectables/DevicesService.html":{},"components/HomeComponent.html":{}}}],["constructor(public",{"_index":771,"title":{},"body":{"components/LogComponent.html":{}}}],["content",{"_index":653,"title":{},"body":{"injectables/DevicesService.html":{}}}],["context",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":798,"title":{},"body":{"components/ModelComponent.html":{}}}],["coolair",{"_index":342,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["cooling",{"_index":489,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["copier",{"_index":343,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["copy",{"_index":1017,"title":{},"body":{"index.html":{}}}],["core",{"_index":1107,"title":{},"body":{"index.html":{}}}],["costs",{"_index":490,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["coverage",{"_index":907,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":256,"title":{},"body":{"components/CubeComponent.html":{},"classes/DeviceList.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["createcontrols",{"_index":799,"title":{},"body":{"components/ModelComponent.html":{}}}],["created",{"_index":1103,"title":{},"body":{"index.html":{}}}],["createdevice",{"_index":625,"title":{},"body":{"injectables/DevicesService.html":{}}}],["createdevice(data",{"_index":636,"title":{},"body":{"injectables/DevicesService.html":{}}}],["creates",{"_index":593,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["createscene",{"_index":219,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["creation",{"_index":1105,"title":{},"body":{"index.html":{}}}],["css2drenderer",{"_index":840,"title":{},"body":{"components/ModelComponent.html":{}}}],["cube",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"index.html":{}}}],["cube'},{'name",{"_index":95,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["cube.component.html",{"_index":210,"title":{},"body":{"components/CubeComponent.html":{}}}],["cube.component.scss",{"_index":209,"title":{},"body":{"components/CubeComponent.html":{}}}],["cube/cube.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["cubecomponent",{"_index":94,"title":{"components/CubeComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["customers",{"_index":478,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["data",{"_index":442,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/HomeComponent.html":{}}}],["data.category",{"_index":725,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["data.devicetype",{"_index":741,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["data.id",{"_index":612,"title":{},"body":{"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["data.name",{"_index":722,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["data.type",{"_index":723,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["datadevicetype",{"_index":334,"title":{"interfaces/DataDeviceType.html":{}},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"coverage.html":{}}}],["date",{"_index":773,"title":{},"body":{"components/LogComponent.html":{},"injectables/LogService.html":{},"miscellaneous/functions.html":{}}}],["date_object",{"_index":986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date_to_string",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["date_to_string(date_object",{"_index":985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declarations",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["decorators",{"_index":267,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["default",{"_index":53,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["definite",{"_index":1135,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":1092,"title":{},"body":{"index.html":{}}}],["delete",{"_index":611,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["delete(this.baseurl",{"_index":667,"title":{},"body":{"injectables/DevicesService.html":{}}}],["deletedevice",{"_index":589,"title":{},"body":{"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{}}}],["deletedevice(data",{"_index":596,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["deletedevice(id",{"_index":639,"title":{},"body":{"injectables/DevicesService.html":{}}}],["dependencies",{"_index":127,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":441,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["designed",{"_index":454,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["desktop",{"_index":344,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["device",{"_index":19,"title":{"classes/Device.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{}}}],["device'},{'name",{"_index":91,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["device.category",{"_index":617,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["device.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["device.component.html",{"_index":23,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["device.component.scss",{"_index":21,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["device.component.ts",{"_index":12,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{},"coverage.html":{}}}],["device.component.ts:13",{"_index":57,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["device.component.ts:14",{"_index":55,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["device.component.ts:15",{"_index":51,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["device.component.ts:17",{"_index":42,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["device.component.ts:19",{"_index":59,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["device.component.ts:22",{"_index":58,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["device.component.ts:23",{"_index":707,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:25",{"_index":48,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["device.component.ts:26",{"_index":704,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:27",{"_index":703,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:29",{"_index":700,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:31",{"_index":693,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:33",{"_index":52,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["device.component.ts:35",{"_index":705,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:36",{"_index":706,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:52",{"_index":699,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:56",{"_index":696,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:60",{"_index":709,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:63",{"_index":711,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:66",{"_index":702,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.component.ts:80",{"_index":701,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["device.id",{"_index":614,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["device.name",{"_index":615,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["device.type",{"_index":616,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["device/:id",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["device/add",{"_index":11,"title":{},"body":{"components/AddDeviceComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["device/edit",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditDeviceComponent.html":{},"coverage.html":{}}}],["devicearr",{"_index":26,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["devicecategories",{"_index":415,"title":{"classes/DeviceCategories.html":{}},"body":{"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"components/DeviceOperationsComponent.html":{},"components/EditDeviceComponent.html":{},"coverage.html":{}}}],["devicecategories().getrandom",{"_index":426,"title":{},"body":{"classes/Device.html":{}}}],["devicecategoriesinterfance",{"_index":399,"title":{"interfaces/DeviceCategoriesInterfance.html":{}},"body":{"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"coverage.html":{}}}],["devicecategory",{"_index":495,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"components/DeviceOperationsComponent.html":{}}}],["devicecategory.category",{"_index":503,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["deviceform",{"_index":27,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["deviceitem.category.category",{"_index":554,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["deviceitem.category.description",{"_index":556,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["deviceitem.name",{"_index":553,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["deviceitem.type",{"_index":555,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["devicelist",{"_index":511,"title":{"classes/DeviceList.html":{}},"body":{"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"coverage.html":{}}}],["devicelists",{"_index":519,"title":{},"body":{"classes/DeviceList.html":{}}}],["deviceoperation.share",{"_index":550,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["deviceoperationscomponent",{"_index":96,"title":{"components/DeviceOperationsComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["devices",{"_index":101,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["devices'},{'name",{"_index":99,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["devices.component.html",{"_index":581,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.component.scss",{"_index":580,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.json\"contributing",{"_index":1041,"title":{},"body":{"index.html":{}}}],["devices/devices.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["devicescomponent",{"_index":98,"title":{"components/DevicesComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deviceslist",{"_index":433,"title":{},"body":{"classes/Device.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["deviceslistcomponent",{"_index":100,"title":{"components/DevicesListComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["devicesservice",{"_index":29,"title":{"injectables/DevicesService.html":{}},"body":{"components/AddDeviceComponent.html":{},"modules/AppModule.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["devicest",{"_index":383,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceTypes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["devicest.findcategoryimplementation('site",{"_index":510,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["devicest.findtype('probe",{"_index":385,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"miscellaneous/variables.html":{}}}],["devicetype",{"_index":337,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["devicetypelist",{"_index":340,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["devicetypes",{"_index":339,"title":{"classes/DeviceTypes.html":{}},"body":{"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/EditDeviceComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["devicetypes().getrandom",{"_index":424,"title":{},"body":{"classes/Device.html":{}}}],["devicetypetype",{"_index":338,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["diagnostic",{"_index":1128,"title":{},"body":{"index.html":{}}}],["diagnosticmessages.json",{"_index":1127,"title":{},"body":{"index.html":{}}}],["dictionaries",{"_index":418,"title":{},"body":{"classes/Device.html":{}}}],["directionallight",{"_index":800,"title":{},"body":{"components/ModelComponent.html":{}}}],["directive",{"_index":88,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["directives",{"_index":111,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["discuss",{"_index":1050,"title":{},"body":{"index.html":{}}}],["docker",{"_index":997,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(renderer.domelement",{"_index":853,"title":{},"body":{"components/ModelComponent.html":{}}}],["document.queryselectorall('#list",{"_index":558,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["document.queryselectorall(\\'#list",{"_index":567,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["documentation",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["double",{"_index":1121,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":697,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["e.devicetype",{"_index":378,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["e.g",{"_index":1072,"title":{},"body":{"index.html":{}}}],["each",{"_index":391,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["edit",{"_index":104,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["editdevicecomponent",{"_index":103,"title":{"components/EditDeviceComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editdevicecomponent.submitform",{"_index":737,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["editdevicecomponent.updateform",{"_index":735,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["element",{"_index":87,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["element.category",{"_index":507,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["element.getstring",{"_index":435,"title":{},"body":{"classes/Device.html":{}}}],["element.print",{"_index":524,"title":{},"body":{"classes/DeviceList.html":{}}}],["element?.devicetype",{"_index":379,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["elementref",{"_index":266,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["emitter",{"_index":1075,"title":{},"body":{"index.html":{}}}],["employees",{"_index":479,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["end",{"_index":1130,"title":{},"body":{"index.html":{}}}],["entities",{"_index":1134,"title":{},"body":{"index.html":{}}}],["entry",{"_index":1126,"title":{},"body":{"index.html":{}}}],["enum",{"_index":1061,"title":{},"body":{"index.html":{}}}],["enums",{"_index":1119,"title":{},"body":{"index.html":{}}}],["environment",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envtexture",{"_index":301,"title":{},"body":{"components/CubeComponent.html":{}}}],["equal",{"_index":390,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["error",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"injectables/DevicesService.html":{}}}],["error('function",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["error.error",{"_index":676,"title":{},"body":{"injectables/DevicesService.html":{}}}],["error.error.message",{"_index":680,"title":{},"body":{"injectables/DevicesService.html":{}}}],["error.message",{"_index":683,"title":{},"body":{"injectables/DevicesService.html":{}}}],["error.status}\\nmessage",{"_index":682,"title":{},"body":{"injectables/DevicesService.html":{}}}],["errorevent",{"_index":678,"title":{},"body":{"injectables/DevicesService.html":{}}}],["errorhandl",{"_index":626,"title":{},"body":{"injectables/DevicesService.html":{}}}],["errorhandl(error",{"_index":641,"title":{},"body":{"injectables/DevicesService.html":{}}}],["errormessage",{"_index":675,"title":{},"body":{"injectables/DevicesService.html":{}}}],["etc",{"_index":1100,"title":{},"body":{"index.html":{}}}],["event",{"_index":564,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["event.preventdefault",{"_index":565,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["example",{"_index":455,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["examples",{"_index":1001,"title":{},"body":{"index.html":{}}}],["existing",{"_index":466,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["exports",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["external",{"_index":1141,"title":{},"body":{"index.html":{}}}],["f",{"_index":384,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["facility",{"_index":450,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["false",{"_index":860,"title":{},"body":{"components/ModelComponent.html":{},"miscellaneous/variables.html":{}}}],["farclipping",{"_index":225,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["farclippingpane",{"_index":843,"title":{},"body":{"components/ModelComponent.html":{}}}],["farclippingplane",{"_index":295,"title":{},"body":{"components/CubeComponent.html":{}}}],["fb",{"_index":30,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["fiber",{"_index":445,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["fieldofview",{"_index":226,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1077,"title":{},"body":{"index.html":{}}}],["findcategory",{"_index":437,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["findcategory(devicecategory",{"_index":492,"title":{},"body":{"classes/DeviceCategories.html":{}}}],["findcategoryimplementation",{"_index":438,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["findcategoryimplementation(this",{"_index":497,"title":{},"body":{"classes/DeviceCategories.html":{}}}],["findcherries",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findcherries(fruit",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findobj",{"_index":569,"title":{},"body":{"classes/DeviceTypes.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["findobj(arr",{"_index":393,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"miscellaneous/functions.html":{}}}],["findobj(devicest.devicetypelist",{"_index":394,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["findobj(obj",{"_index":380,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["findtype",{"_index":570,"title":{},"body":{"classes/DeviceTypes.html":{}}}],["findtype(search",{"_index":375,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["firewall",{"_index":345,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["first",{"_index":1049,"title":{},"body":{"index.html":{}}}],["flag",{"_index":1116,"title":{},"body":{"index.html":{}}}],["flags",{"_index":1112,"title":{},"body":{"index.html":{}}}],["floor",{"_index":465,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["foo",{"_index":1030,"title":{},"body":{"index.html":{}}}],["forget",{"_index":1057,"title":{},"body":{"index.html":{}}}],["formarray",{"_index":715,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["formbuilder",{"_index":37,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["formcontrol",{"_index":547,"title":{},"body":{"components/DeviceOperationsComponent.html":{},"components/EditDeviceComponent.html":{}}}],["formcontrols",{"_index":731,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["formgroup",{"_index":56,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["formsmodule",{"_index":714,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["fruit",{"_index":988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"components/ModelComponent.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":981,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["fundamentals",{"_index":1005,"title":{},"body":{"index.html":{}}}],["general",{"_index":1094,"title":{},"body":{"index.html":{}}}],["generate",{"_index":429,"title":{},"body":{"classes/Device.html":{},"index.html":{}}}],["generated",{"_index":1019,"title":{},"body":{"index.html":{}}}],["generator",{"_index":411,"title":{},"body":{"classes/Device.html":{}}}],["geometry",{"_index":213,"title":{},"body":{"components/CubeComponent.html":{}}}],["get('/assets/readme.md",{"_index":759,"title":{},"body":{"components/HomeComponent.html":{}}}],["get(this.baseurl",{"_index":663,"title":{},"body":{"injectables/DevicesService.html":{}}}],["getapiconfiguration",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["getaspectratio",{"_index":220,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["getaway",{"_index":346,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["getcanvas",{"_index":287,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["getcat(category",{"_index":505,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["getcategory",{"_index":710,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["getdatestring",{"_index":787,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdevice",{"_index":627,"title":{},"body":{"injectables/DevicesService.html":{}}}],["getdevice(id",{"_index":643,"title":{},"body":{"injectables/DevicesService.html":{}}}],["getdevices",{"_index":531,"title":{},"body":{"components/DeviceOperationsComponent.html":{},"injectables/DevicesService.html":{}}}],["getdevicetype",{"_index":532,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["getrandom",{"_index":370,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceTypes.html":{}}}],["getrandomcategory",{"_index":439,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["getstring",{"_index":396,"title":{},"body":{"classes/Device.html":{}}}],["getter",{"_index":732,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["getting",{"_index":990,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":708,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["git",{"_index":1008,"title":{},"body":{"index.html":{}}}],["global",{"_index":1087,"title":{},"body":{"index.html":{}}}],["gltf",{"_index":837,"title":{},"body":{"components/ModelComponent.html":{}}}],["gltf.scene.children[0",{"_index":864,"title":{},"body":{"components/ModelComponent.html":{}}}],["gltfloader",{"_index":831,"title":{},"body":{"components/ModelComponent.html":{}}}],["graph",{"_index":1151,"title":{},"body":{"modules.html":{}}}],["grids",{"_index":470,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["guidelines",{"_index":1056,"title":{},"body":{"index.html":{}}}],["hand",{"_index":1080,"title":{},"body":{"index.html":{}}}],["headers",{"_index":651,"title":{},"body":{"injectables/DevicesService.html":{}}}],["height",{"_index":456,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["helper",{"_index":296,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["home",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":106,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["home.component.html",{"_index":745,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":744,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":105,"title":{"components/HomeComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":86,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["htmlcanvaselement",{"_index":297,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["http",{"_index":632,"title":{},"body":{"injectables/DevicesService.html":{},"components/HomeComponent.html":{}}}],["http://localhost:3000",{"_index":649,"title":{},"body":{"injectables/DevicesService.html":{},"index.html":{}}}],["http://localhost:8080",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":630,"title":{},"body":{"injectables/DevicesService.html":{},"components/HomeComponent.html":{}}}],["httpclientmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":652,"title":{},"body":{"injectables/DevicesService.html":{}}}],["httpoptions",{"_index":623,"title":{},"body":{"injectables/DevicesService.html":{}}}],["https://github.com/microsoft/typescript/wiki/coding",{"_index":1058,"title":{},"body":{"index.html":{}}}],["hubs",{"_index":347,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["icons",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":72,"title":{},"body":{"components/AddDeviceComponent.html":{},"classes/Bug.html":{},"classes/Device.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"injectables/LogService.html":{}}}],["identifier",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["identityservice.getapiconfiguration",{"_index":1021,"title":{},"body":{"index.html":{}}}],["immutable",{"_index":1101,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/ModelComponent.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"classes/Device.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["indefinite",{"_index":1132,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexof(data.id",{"_index":610,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{}}}],["infrastructure",{"_index":473,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["injectable",{"_index":619,"title":{"injectables/DevicesService.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{}},"body":{"injectables/DevicesService.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"coverage.html":{}}}],["injectables",{"_index":620,"title":{},"body":{"injectables/DevicesService.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"overview.html":{}}}],["input",{"_index":289,"title":{},"body":{"components/CubeComponent.html":{},"components/HomeComponent.html":{},"components/ModelComponent.html":{}}}],["input('farclipping",{"_index":294,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["input('nearclipping",{"_index":292,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["inputs",{"_index":223,"title":{},"body":{"components/CubeComponent.html":{},"components/HomeComponent.html":{},"components/ModelComponent.html":{}}}],["install",{"_index":963,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["instance",{"_index":594,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["instanceof",{"_index":677,"title":{},"body":{"injectables/DevicesService.html":{}}}],["instead",{"_index":1111,"title":{},"body":{"index.html":{}}}],["integrate",{"_index":1006,"title":{},"body":{"index.html":{}}}],["interface",{"_index":333,"title":{"interfaces/DataDeviceType.html":{},"interfaces/DeviceCategoriesInterfance.html":{}},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceTypes.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":335,"title":{},"body":{"interfaces/DataDeviceType.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"index.html":{},"overview.html":{}}}],["internet",{"_index":447,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["introduce",{"_index":1085,"title":{},"body":{"index.html":{}}}],["inventory",{"_index":935,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":83,"title":{},"body":{"components/AddDeviceComponent.html":{},"index.html":{}}}],["issue_message",{"_index":202,"title":{},"body":{"classes/Bug.html":{}}}],["issue_name",{"_index":203,"title":{},"body":{"classes/Bug.html":{}}}],["item.category",{"_index":551,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["item.devicetype",{"_index":552,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["jonsonserver",{"_index":604,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["jquery",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["jsdoc",{"_index":1118,"title":{},"body":{"index.html":{}}}],["json",{"_index":1032,"title":{},"body":{"index.html":{}}}],["json.stringify(data",{"_index":670,"title":{},"body":{"injectables/DevicesService.html":{}}}],["jsonserver",{"_index":1036,"title":{},"body":{"index.html":{}}}],["jsonserver:bugs",{"_index":1037,"title":{},"body":{"index.html":{}}}],["jsonserver:devices",{"_index":1040,"title":{},"body":{"index.html":{}}}],["karma",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":1004,"title":{},"body":{"index.html":{}}}],["legend",{"_index":85,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["library",{"_index":1015,"title":{},"body":{"index.html":{}}}],["light1",{"_index":801,"title":{},"body":{"components/ModelComponent.html":{}}}],["light2",{"_index":802,"title":{},"body":{"components/ModelComponent.html":{}}}],["light3",{"_index":803,"title":{},"body":{"components/ModelComponent.html":{}}}],["light4",{"_index":804,"title":{},"body":{"components/ModelComponent.html":{}}}],["list",{"_index":82,"title":{},"body":{"components/AddDeviceComponent.html":{},"modules/AppRoutingModule.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["list'},{'name",{"_index":102,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["list.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":587,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list.component.scss",{"_index":586,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list.component.ts",{"_index":585,"title":{},"body":{"components/DevicesListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":600,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list.component.ts:15",{"_index":599,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list.component.ts:17",{"_index":592,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list.component.ts:27",{"_index":601,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list.component.ts:38",{"_index":598,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list.component.ts:56",{"_index":597,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list.component.ts:71",{"_index":595,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["list/devices",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DevicesListComponent.html":{},"coverage.html":{}}}],["list/find",{"_index":522,"title":{},"body":{"classes/DeviceList.html":{}}}],["listcomponent",{"_index":605,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["literal",{"_index":575,"title":{},"body":{"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"injectables/LogService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":348,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{}}}],["loaddevices",{"_index":590,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["loader",{"_index":214,"title":{},"body":{"components/CubeComponent.html":{}}}],["loadergltf",{"_index":805,"title":{},"body":{"components/ModelComponent.html":{}}}],["local",{"_index":1064,"title":{},"body":{"index.html":{}}}],["localhost:4200",{"_index":1012,"title":{},"body":{"index.html":{}}}],["localhost:4200/model",{"_index":1013,"title":{},"body":{"index.html":{}}}],["localized",{"_index":1125,"title":{},"body":{"index.html":{}}}],["locating",{"_index":485,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["lodash",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":766,"title":{},"body":{"components/LogComponent.html":{},"injectables/LogService.html":{}}}],["log'},{'name",{"_index":108,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["log.category",{"_index":776,"title":{},"body":{"components/LogComponent.html":{}}}],["log.component",{"_index":777,"title":{},"body":{"components/LogComponent.html":{}}}],["log.component.html",{"_index":768,"title":{},"body":{"components/LogComponent.html":{}}}],["log.component.scss",{"_index":767,"title":{},"body":{"components/LogComponent.html":{}}}],["log.date",{"_index":775,"title":{},"body":{"components/LogComponent.html":{}}}],["log.id",{"_index":774,"title":{},"body":{"components/LogComponent.html":{}}}],["log.message",{"_index":778,"title":{},"body":{"components/LogComponent.html":{}}}],["log/log.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["logcomponent",{"_index":107,"title":{"components/LogComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logical",{"_index":1071,"title":{},"body":{"index.html":{}}}],["logs",{"_index":772,"title":{},"body":{"components/LogComponent.html":{}}}],["logservice",{"_index":40,"title":{"injectables/LogService.html":{}},"body":{"components/AddDeviceComponent.html":{},"modules/AppModule.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"coverage.html":{},"overview.html":{}}}],["loop",{"_index":263,"title":{},"body":{"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"components/ModelComponent.html":{}}}],["lowercase",{"_index":420,"title":{},"body":{"classes/Device.html":{}}}],["major",{"_index":1045,"title":{},"body":{"index.html":{}}}],["make",{"_index":1053,"title":{},"body":{"index.html":{}}}],["map",{"_index":280,"title":{},"body":{"components/CubeComponent.html":{}}}],["markdown",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["markdownservice",{"_index":791,"title":{"injectables/MarkdownService.html":{}},"body":{"injectables/MarkdownService.html":{},"coverage.html":{}}}],["markets",{"_index":477,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["match",{"_index":458,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["matching",{"_index":114,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":215,"title":{},"body":{"components/CubeComponent.html":{}}}],["material.env",{"_index":300,"title":{},"body":{"components/CubeComponent.html":{}}}],["math.floor(math.random",{"_index":371,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceTypes.html":{}}}],["md",{"_index":746,"title":{},"body":{"components/HomeComponent.html":{}}}],["memberof",{"_index":302,"title":{},"body":{"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{}}}],["menu",{"_index":1145,"title":{},"body":{"index.html":{}}}],["mesh",{"_index":871,"title":{},"body":{"components/ModelComponent.html":{}}}],["message",{"_index":78,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{}}}],["messages",{"_index":779,"title":{},"body":{"components/LogComponent.html":{},"index.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["method",{"_index":1023,"title":{},"body":{"index.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{}}}],["miscellaneous",{"_index":980,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":110,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["model.component.html",{"_index":796,"title":{},"body":{"components/ModelComponent.html":{}}}],["model.component.scss",{"_index":795,"title":{},"body":{"components/ModelComponent.html":{}}}],["model/model.component",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modelcomponent",{"_index":109,"title":{"components/ModelComponent.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelswagger",{"_index":1014,"title":{},"body":{"index.html":{}}}],["modem",{"_index":350,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["module",{"_index":124,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":126,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1113,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":444,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"index.html":{}}}],["multiplexer",{"_index":351,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["namecontrol",{"_index":546,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["named",{"_index":1136,"title":{},"body":{"index.html":{}}}],["names",{"_index":410,"title":{},"body":{"classes/Device.html":{},"index.html":{}}}],["namespace",{"_index":1088,"title":{},"body":{"index.html":{}}}],["nearclipping",{"_index":227,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["nearclippingpane",{"_index":842,"title":{},"body":{"components/ModelComponent.html":{}}}],["nearclippingplane",{"_index":293,"title":{},"body":{"components/CubeComponent.html":{}}}],["need",{"_index":1084,"title":{},"body":{"index.html":{}}}],["neo4j/oracle",{"_index":995,"title":{},"body":{"index.html":{}}}],["networks",{"_index":471,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["new",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/ModelComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1144,"title":{},"body":{"index.html":{}}}],["ng",{"_index":953,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":221,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["ngmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["ngoninit",{"_index":33,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/ModelComponent.html":{}}}],["ngx",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["ngzone",{"_index":38,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["nobezel__29341.png",{"_index":251,"title":{},"body":{"components/CubeComponent.html":{}}}],["nodes",{"_index":1098,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1010,"title":{},"body":{"index.html":{}}}],["null",{"_index":644,"title":{},"body":{"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"index.html":{}}}],["number",{"_index":235,"title":{},"body":{"components/CubeComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{}}}],["obj",{"_index":382,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":392,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"injectables/DevicesService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1097,"title":{},"body":{"index.html":{}}}],["observable",{"_index":638,"title":{},"body":{"injectables/DevicesService.html":{}}}],["occupies",{"_index":464,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["onerror",{"_index":748,"title":{},"body":{"components/HomeComponent.html":{}}}],["onerror(data",{"_index":752,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/ModelComponent.html":{}}}],["onload",{"_index":749,"title":{},"body":{"components/HomeComponent.html":{}}}],["onload(data",{"_index":754,"title":{},"body":{"components/HomeComponent.html":{}}}],["onlyself",{"_index":727,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["open",{"_index":1048,"title":{},"body":{"index.html":{}}}],["operated",{"_index":520,"title":{},"body":{"classes/DeviceList.html":{}}}],["operations",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DeviceOperationsComponent.html":{}}}],["operations'},{'name",{"_index":97,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["operations.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["operations.component.html",{"_index":530,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.scss",{"_index":529,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.ts",{"_index":528,"title":{},"body":{"components/DeviceOperationsComponent.html":{},"coverage.html":{}}}],["operations.component.ts:14",{"_index":541,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.ts:15",{"_index":542,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.ts:16",{"_index":535,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.ts:24",{"_index":539,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.ts:37",{"_index":536,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.ts:50",{"_index":537,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.ts:59",{"_index":540,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations.component.ts:68",{"_index":538,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["operations/device",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DeviceOperationsComponent.html":{},"coverage.html":{}}}],["opertions",{"_index":613,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["optional",{"_index":47,"title":{},"body":{"components/AddDeviceComponent.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"miscellaneous/functions.html":{}}}],["orbitcontrols",{"_index":821,"title":{},"body":{"components/ModelComponent.html":{}}}],["orbitcontrols(this.camera",{"_index":855,"title":{},"body":{"components/ModelComponent.html":{}}}],["out",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["outside",{"_index":1102,"title":{},"body":{"index.html":{}}}],["over",{"_index":386,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["overhead",{"_index":461,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["overview",{"_index":1153,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p3lease",{"_index":1052,"title":{},"body":{"index.html":{}}}],["package",{"_index":944,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":373,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"injectables/LogService.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"components/AddDeviceComponent.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1073,"title":{},"body":{"index.html":{}}}],["pascalcase",{"_index":1059,"title":{},"body":{"index.html":{}}}],["path",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pdu",{"_index":352,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["per",{"_index":1070,"title":{},"body":{"index.html":{}}}],["period",{"_index":1129,"title":{},"body":{"index.html":{}}}],["physical",{"_index":472,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["pipe(retry(1",{"_index":664,"title":{},"body":{"injectables/DevicesService.html":{}}}],["pipeline",{"_index":1109,"title":{},"body":{"index.html":{}}}],["play",{"_index":481,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["please",{"_index":1047,"title":{},"body":{"index.html":{}}}],["popperjs/core",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["populate",{"_index":1027,"title":{},"body":{"index.html":{}}}],["position",{"_index":872,"title":{},"body":{"components/ModelComponent.html":{}}}],["possible",{"_index":1069,"title":{},"body":{"index.html":{}}}],["post",{"_index":668,"title":{},"body":{"injectables/DevicesService.html":{}}}],["power",{"_index":354,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["prefix",{"_index":1060,"title":{},"body":{"index.html":{}}}],["present",{"_index":1142,"title":{},"body":{"index.html":{}}}],["print",{"_index":397,"title":{},"body":{"classes/Device.html":{},"classes/DeviceList.html":{}}}],["printer",{"_index":355,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["private",{"_index":69,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["probe",{"_index":356,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["production",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":993,"title":{},"body":{"index.html":{}}}],["projects/swagger",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":389,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"index.html":{}}}],["provide",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["provided",{"_index":448,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["providedin",{"_index":661,"title":{},"body":{"injectables/DevicesService.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{}}}],["providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["proximity",{"_index":476,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["public",{"_index":28,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["pull",{"_index":1042,"title":{},"body":{"index.html":{}}}],["push",{"_index":513,"title":{},"body":{"classes/DeviceList.html":{}}}],["push(device",{"_index":517,"title":{},"body":{"classes/DeviceList.html":{}}}],["put",{"_index":671,"title":{},"body":{"injectables/DevicesService.html":{}}}],["quantity",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quotes",{"_index":1122,"title":{},"body":{"index.html":{}}}],["r",{"_index":509,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["racks",{"_index":460,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["random",{"_index":369,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceTypes.html":{}}}],["re",{"_index":869,"title":{},"body":{"components/ModelComponent.html":{}}}],["reactiveformsmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":764,"title":{},"body":{"components/HomeComponent.html":{}}}],["records",{"_index":431,"title":{},"body":{"classes/Device.html":{}}}],["reduce",{"_index":488,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["related",{"_index":1114,"title":{},"body":{"index.html":{}}}],["remove",{"_index":618,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["render",{"_index":326,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["renderer",{"_index":216,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["renderer.domelement",{"_index":856,"title":{},"body":{"components/ModelComponent.html":{}}}],["renderer.domelement.style.position",{"_index":849,"title":{},"body":{"components/ModelComponent.html":{}}}],["renderer.domelement.style.top",{"_index":851,"title":{},"body":{"components/ModelComponent.html":{}}}],["renderer.setsize(window.innerwidth",{"_index":847,"title":{},"body":{"components/ModelComponent.html":{}}}],["rendering",{"_index":262,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["repeaters",{"_index":357,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["requestanimationframe(render",{"_index":327,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["requested",{"_index":1147,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1043,"title":{},"body":{"index.html":{}}}],["require",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":459,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["requires",{"_index":469,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["reset",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsetype",{"_index":760,"title":{},"body":{"components/HomeComponent.html":{}}}],["rest",{"_index":996,"title":{},"body":{"index.html":{}}}],["results",{"_index":113,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":658,"title":{},"body":{"injectables/DevicesService.html":{}}}],["return",{"_index":298,"title":{},"body":{"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/ModelComponent.html":{}}}],["returns",{"_index":49,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"miscellaneous/functions.html":{}}}],["roads",{"_index":475,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["role",{"_index":482,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["root",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/DevicesService.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{}}}],["root'},{'name",{"_index":93,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["rotationspeedx",{"_index":228,"title":{},"body":{"components/CubeComponent.html":{}}}],["rotationspeedy",{"_index":229,"title":{},"body":{"components/CubeComponent.html":{}}}],["router",{"_index":39,"title":{},"body":{"components/AddDeviceComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["routermodule",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":191,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rule",{"_index":1138,"title":{},"body":{"index.html":{}}}],["run",{"_index":1035,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":657,"title":{},"body":{"injectables/DevicesService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":660,"title":{},"body":{"injectables/DevicesService.html":{}}}],["scanner",{"_index":1074,"title":{},"body":{"index.html":{}}}],["scene",{"_index":217,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["search",{"_index":374,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["searchcategory",{"_index":493,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["security",{"_index":358,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["selecting",{"_index":483,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["sentence",{"_index":1131,"title":{},"body":{"index.html":{}}}],["separator",{"_index":421,"title":{},"body":{"classes/Device.html":{}}}],["serve",{"_index":1011,"title":{},"body":{"index.html":{}}}],["server",{"_index":359,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"injectables/DevicesService.html":{},"index.html":{}}}],["services",{"_index":480,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["services/devices.service",{"_index":62,"title":{},"body":{"components/AddDeviceComponent.html":{},"modules/AppModule.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["services/log.service",{"_index":65,"title":{},"body":{"components/AddDeviceComponent.html":{},"modules/AppModule.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/LogComponent.html":{}}}],["serwer",{"_index":1033,"title":{},"body":{"index.html":{}}}],["sets",{"_index":870,"title":{},"body":{"components/ModelComponent.html":{}}}],["shaper",{"_index":364,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["share",{"_index":533,"title":{},"body":{"components/DeviceOperationsComponent.html":{},"index.html":{}}}],["shared",{"_index":1089,"title":{},"body":{"index.html":{}}}],["shared/device",{"_index":543,"title":{},"body":{"components/DeviceOperationsComponent.html":{},"injectables/DevicesService.html":{}}}],["shared/devicecategories",{"_index":544,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["shared/devicetypes",{"_index":545,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["shared/utils",{"_index":788,"title":{},"body":{"injectables/LogService.html":{}}}],["side",{"_index":679,"title":{},"body":{"injectables/DevicesService.html":{}}}],["singular",{"_index":1140,"title":{},"body":{"index.html":{}}}],["site",{"_index":468,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["size",{"_index":230,"title":{},"body":{"components/CubeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"injectables/MarkdownService.html":{},"components/ModelComponent.html":{}}}],["spec\\.ts",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifically",{"_index":453,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["src",{"_index":1018,"title":{},"body":{"index.html":{}}}],["src/.../devicetypes.ts",{"_index":984,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../find.ts",{"_index":983,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../log.service.ts",{"_index":1160,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/add",{"_index":10,"title":{},"body":{"components/AddDeviceComponent.html":{},"coverage.html":{}}}],["src/app/components/devices",{"_index":584,"title":{},"body":{"components/DevicesListComponent.html":{},"coverage.html":{}}}],["src/app/components/edit",{"_index":685,"title":{},"body":{"components/EditDeviceComponent.html":{},"coverage.html":{}}}],["src/app/cube/cube.component.ts",{"_index":207,"title":{},"body":{"components/CubeComponent.html":{},"coverage.html":{}}}],["src/app/cube/cube.component.ts:110",{"_index":234,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:114",{"_index":259,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:116",{"_index":258,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:18",{"_index":269,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:22",{"_index":244,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:23",{"_index":246,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:24",{"_index":248,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:25",{"_index":252,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:29",{"_index":237,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:30",{"_index":241,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:31",{"_index":242,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:32",{"_index":239,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:36",{"_index":265,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:38",{"_index":288,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:41",{"_index":278,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:42",{"_index":276,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:43",{"_index":282,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:48",{"_index":273,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:50",{"_index":284,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:52",{"_index":286,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:60",{"_index":253,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:71",{"_index":255,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:87",{"_index":257,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/cube/cube.component.ts:97",{"_index":260,"title":{},"body":{"components/CubeComponent.html":{}}}],["src/app/device",{"_index":527,"title":{},"body":{"components/DeviceOperationsComponent.html":{},"coverage.html":{}}}],["src/app/devices/devices.component.ts",{"_index":577,"title":{},"body":{"components/DevicesComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":756,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":750,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":751,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:20",{"_index":755,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":753,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/log/log.component.ts",{"_index":765,"title":{},"body":{"components/LogComponent.html":{},"coverage.html":{}}}],["src/app/log/log.component.ts:10",{"_index":770,"title":{},"body":{"components/LogComponent.html":{}}}],["src/app/log/log.component.ts:9",{"_index":769,"title":{},"body":{"components/LogComponent.html":{}}}],["src/app/model/model.component.ts",{"_index":794,"title":{},"body":{"components/ModelComponent.html":{},"coverage.html":{}}}],["src/app/model/model.component.ts:136",{"_index":813,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:146",{"_index":816,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:15",{"_index":820,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:158",{"_index":807,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:162",{"_index":815,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:166",{"_index":814,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:19",{"_index":809,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:21",{"_index":810,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:23",{"_index":808,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:26",{"_index":819,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:28",{"_index":822,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:30",{"_index":818,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:32",{"_index":827,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:34",{"_index":828,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:36",{"_index":829,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:38",{"_index":830,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:40",{"_index":833,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:42",{"_index":825,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:46",{"_index":836,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:50",{"_index":832,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:52",{"_index":834,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:54",{"_index":835,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:62",{"_index":811,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:74",{"_index":823,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/model/model.component.ts:93",{"_index":812,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/services/devices.service.ts",{"_index":621,"title":{},"body":{"injectables/DevicesService.html":{},"coverage.html":{}}}],["src/app/services/devices.service.ts:11",{"_index":650,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:13",{"_index":631,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:17",{"_index":655,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:29",{"_index":646,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:35",{"_index":645,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:48",{"_index":640,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:55",{"_index":637,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:66",{"_index":648,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:76",{"_index":634,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:80",{"_index":635,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/devices.service.ts:84",{"_index":642,"title":{},"body":{"injectables/DevicesService.html":{}}}],["src/app/services/log.service.ts",{"_index":780,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/services/log.service.ts:21",{"_index":785,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:22",{"_index":781,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:33",{"_index":783,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:53",{"_index":784,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/markdown.service.ts",{"_index":792,"title":{},"body":{"injectables/MarkdownService.html":{},"coverage.html":{}}}],["src/app/services/markdown.service.ts:6",{"_index":793,"title":{},"body":{"injectables/MarkdownService.html":{}}}],["src/app/shared/bug.ts",{"_index":201,"title":{},"body":{"classes/Bug.html":{},"coverage.html":{}}}],["src/app/shared/bug.ts:13",{"_index":204,"title":{},"body":{"classes/Bug.html":{}}}],["src/app/shared/bug.ts:14",{"_index":206,"title":{},"body":{"classes/Bug.html":{}}}],["src/app/shared/bug.ts:15",{"_index":205,"title":{},"body":{"classes/Bug.html":{}}}],["src/app/shared/device",{"_index":602,"title":{},"body":{"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["src/app/shared/device.ts",{"_index":395,"title":{},"body":{"classes/Device.html":{},"coverage.html":{}}}],["src/app/shared/device.ts:25",{"_index":400,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:26",{"_index":401,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:27",{"_index":402,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:28",{"_index":398,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:41",{"_index":404,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:54",{"_index":403,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/devicecategories",{"_index":717,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["src/app/shared/devicecategories.ts",{"_index":436,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"coverage.html":{}}}],["src/app/shared/devicecategories.ts:18",{"_index":491,"title":{},"body":{"classes/DeviceCategories.html":{}}}],["src/app/shared/devicecategories.ts:36",{"_index":500,"title":{},"body":{"classes/DeviceCategories.html":{}}}],["src/app/shared/devicecategories.ts:42",{"_index":494,"title":{},"body":{"classes/DeviceCategories.html":{}}}],["src/app/shared/devicecategories.ts:49",{"_index":498,"title":{},"body":{"classes/DeviceCategories.html":{}}}],["src/app/shared/devicecategories.ts:60",{"_index":499,"title":{},"body":{"classes/DeviceCategories.html":{}}}],["src/app/shared/devicelist.ts",{"_index":512,"title":{},"body":{"classes/DeviceList.html":{},"coverage.html":{}}}],["src/app/shared/devicelist.ts:15",{"_index":515,"title":{},"body":{"classes/DeviceList.html":{}}}],["src/app/shared/devicelist.ts:19",{"_index":518,"title":{},"body":{"classes/DeviceList.html":{}}}],["src/app/shared/devicelist.ts:7",{"_index":514,"title":{},"body":{"classes/DeviceList.html":{}}}],["src/app/shared/devicelist.ts:9",{"_index":516,"title":{},"body":{"classes/DeviceList.html":{}}}],["src/app/shared/devicetypes",{"_index":713,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["src/app/shared/devicetypes.ts",{"_index":336,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/devicetypes.ts:29",{"_index":571,"title":{},"body":{"classes/DeviceTypes.html":{}}}],["src/app/shared/devicetypes.ts:56",{"_index":574,"title":{},"body":{"classes/DeviceTypes.html":{}}}],["src/app/shared/devicetypes.ts:65",{"_index":576,"title":{},"body":{"classes/DeviceTypes.html":{}}}],["src/app/shared/devicetypes.ts:77",{"_index":573,"title":{},"body":{"classes/DeviceTypes.html":{}}}],["src/app/shared/devicetypes.ts:82",{"_index":572,"title":{},"body":{"classes/DeviceTypes.html":{}}}],["src/app/shared/utils.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/tmp/find.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":994,"title":{},"body":{"index.html":{}}}],["stage",{"_index":291,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["start",{"_index":261,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["started",{"_index":991,"title":{"index.html":{}},"body":{}}],["startrenderingloop",{"_index":222,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["statements",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1022,"title":{},"body":{"index.html":{}}}],["stating",{"_index":1137,"title":{},"body":{"index.html":{}}}],["status",{"_index":674,"title":{},"body":{"injectables/DevicesService.html":{}}}],["string",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceTypes.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"miscellaneous/functions.html":{}}}],["strings",{"_index":1120,"title":{},"body":{"index.html":{}}}],["style",{"_index":419,"title":{},"body":{"classes/Device.html":{},"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["subject",{"_index":1139,"title":{},"body":{"index.html":{}}}],["submit",{"_index":84,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["submitform",{"_index":34,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["subscribe((res",{"_index":740,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["such",{"_index":474,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["suffix",{"_index":1078,"title":{},"body":{"index.html":{}}}],["support",{"_index":1148,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1054,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1149,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["swaggercodegen",{"_index":1020,"title":{},"body":{"index.html":{}}}],["switch",{"_index":360,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["symbols",{"_index":1099,"title":{},"body":{"index.html":{}}}],["system",{"_index":353,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["systems",{"_index":462,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["tab",{"_index":559,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["table",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["tabtrigger",{"_index":561,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["tabtrigger.show",{"_index":566,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["telephone",{"_index":361,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["tense",{"_index":1143,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":362,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["testinting",{"_index":1034,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1055,"title":{},"body":{"index.html":{}}}],["text",{"_index":761,"title":{},"body":{"components/HomeComponent.html":{}}}],["texture",{"_index":231,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.actroute.snapshot.parammap.get('id",{"_index":719,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.actroute.snapshot.parammap.get('name",{"_index":736,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.adddevice",{"_index":68,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["this.ambientlight",{"_index":879,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.baseurl",{"_index":669,"title":{},"body":{"injectables/DevicesService.html":{}}}],["this.camera",{"_index":313,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.camera.position.x",{"_index":877,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.camera.position.y",{"_index":878,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.camera.position.z",{"_index":317,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.cameraz",{"_index":318,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.canvas",{"_index":323,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.canvas.clientheight",{"_index":320,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.canvas.clientwidth",{"_index":319,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":299,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.category",{"_index":425,"title":{},"body":{"classes/Device.html":{}}}],["this.category.category",{"_index":427,"title":{},"body":{"classes/Device.html":{}}}],["this.category?.setvalue(e.target.value",{"_index":729,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.controls",{"_index":854,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.controls.autorotate",{"_index":857,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.controls.enablepan",{"_index":859,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.controls.enablezoom",{"_index":858,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.controls.update",{"_index":861,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.createcontrols",{"_index":906,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.createscene",{"_index":331,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.cube.rotation.x",{"_index":303,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.cube.rotation.y",{"_index":305,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.devicecategories",{"_index":501,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["this.devicecategories.find((element",{"_index":506,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["this.devicecategories.find(this.findcategory(searchcategory",{"_index":504,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["this.devicecategories.length",{"_index":502,"title":{},"body":{"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{}}}],["this.deviceform",{"_index":70,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["this.deviceform.value",{"_index":79,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["this.devicelist",{"_index":525,"title":{},"body":{"classes/DeviceList.html":{}}}],["this.devicelist.foreach((element",{"_index":523,"title":{},"body":{"classes/DeviceList.html":{}}}],["this.devicelist.push(device",{"_index":526,"title":{},"body":{"classes/DeviceList.html":{}}}],["this.devices",{"_index":673,"title":{},"body":{"injectables/DevicesService.html":{}}}],["this.devices.push(device",{"_index":672,"title":{},"body":{"injectables/DevicesService.html":{}}}],["this.deviceslist",{"_index":607,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["this.deviceslist.map((x",{"_index":608,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["this.devicesservice",{"_index":738,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.devicesservice.createdevice(this.deviceform.value).subscribe((res",{"_index":74,"title":{},"body":{"components/AddDeviceComponent.html":{}}}],["this.devicesservice.getdevice(id).subscribe((data",{"_index":720,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.devicesservice.getdevices().subscribe((data",{"_index":606,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["this.devicetypelist",{"_index":368,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["this.devicetypelist.find((e",{"_index":377,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["this.devicetypelist.length",{"_index":372,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["this.directionallight",{"_index":882,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.directionallight.castshadow",{"_index":886,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.directionallight.position.set(0",{"_index":885,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.farclippingpane",{"_index":876,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.farclippingplane",{"_index":316,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.fb.group",{"_index":71,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/EditDeviceComponent.html":{}}}],["this.fieldofview",{"_index":314,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.getaspectratio",{"_index":312,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.getdevices",{"_index":549,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["this.http",{"_index":662,"title":{},"body":{"injectables/DevicesService.html":{},"components/HomeComponent.html":{}}}],["this.httpoptions",{"_index":666,"title":{},"body":{"injectables/DevicesService.html":{}}}],["this.id",{"_index":416,"title":{},"body":{"classes/Device.html":{},"injectables/LogService.html":{}}}],["this.light1",{"_index":888,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.light1.position.set(0",{"_index":891,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.light2",{"_index":893,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.light2.position.set(500",{"_index":894,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.light3",{"_index":896,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.light3.position.set(0",{"_index":897,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.light4",{"_index":900,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.light4.position.set",{"_index":901,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.loaddevices",{"_index":603,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["this.loader.load(this.texture",{"_index":281,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.loadergltf.load('assets/robot/scene.gltf",{"_index":863,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.log",{"_index":790,"title":{},"body":{"injectables/LogService.html":{}}}],["this.log.push(log",{"_index":789,"title":{},"body":{"injectables/LogService.html":{}}}],["this.logservice.add",{"_index":77,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["this.material",{"_index":272,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.md",{"_index":757,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.model",{"_index":844,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.model.position.multiplyscalar",{"_index":873,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.model.rotation.z",{"_index":845,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.name",{"_index":417,"title":{},"body":{"classes/Device.html":{}}}],["this.nearclippingpane",{"_index":875,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.nearclippingplane",{"_index":315,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.ngzone.run",{"_index":80,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["this.renderer",{"_index":322,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.renderer.setpixelratio(devicepixelratio",{"_index":324,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.renderer.setsize(this.canvas.clientwidth",{"_index":325,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.rotationspeedx",{"_index":304,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.rotationspeedy",{"_index":306,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.router.navigatebyurl('/devices",{"_index":81,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{}}}],["this.scene",{"_index":307,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.scene.add(this.ambientlight",{"_index":881,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.scene.add(this.cube",{"_index":310,"title":{},"body":{"components/CubeComponent.html":{}}}],["this.scene.add(this.directionallight",{"_index":887,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.scene.add(this.light1",{"_index":892,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.scene.add(this.light2",{"_index":895,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.scene.add(this.light3",{"_index":899,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.scene.add(this.light4",{"_index":903,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.scene.add(this.model",{"_index":874,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.scene.background",{"_index":308,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.startrenderingloop",{"_index":332,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["this.type",{"_index":423,"title":{},"body":{"classes/Device.html":{}}}],["this.type?.setvalue(e.target.value",{"_index":726,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.updatedeviceform",{"_index":721,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.updatedeviceform.get('category",{"_index":734,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.updatedeviceform.get('type",{"_index":733,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.updatedeviceform.value",{"_index":739,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["this.updateform",{"_index":718,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["three",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/ModelComponent.html":{},"dependencies.html":{}}}],["three.ambientlight",{"_index":817,"title":{},"body":{"components/ModelComponent.html":{}}}],["three.ambientlight(0x00000",{"_index":880,"title":{},"body":{"components/ModelComponent.html":{}}}],["three.box3().setfromobject(this.model",{"_index":867,"title":{},"body":{"components/ModelComponent.html":{}}}],["three.boxgeometry(4",{"_index":274,"title":{},"body":{"components/CubeComponent.html":{}}}],["three.color(0x000000",{"_index":309,"title":{},"body":{"components/CubeComponent.html":{}}}],["three.color(0xd4d4d8",{"_index":862,"title":{},"body":{"components/ModelComponent.html":{}}}],["three.directionallight",{"_index":824,"title":{},"body":{"components/ModelComponent.html":{}}}],["three.directionallight(0xffdf04",{"_index":883,"title":{},"body":{"components/ModelComponent.html":{}}}],["three.js",{"_index":998,"title":{},"body":{"index.html":{}}}],["three.mesh",{"_index":270,"title":{},"body":{"components/CubeComponent.html":{}}}],["three.mesh(this.geometry",{"_index":271,"title":{},"body":{"components/CubeComponent.html":{}}}],["three.meshbasicmaterial",{"_index":279,"title":{},"body":{"components/CubeComponent.html":{}}}],["three.perspectivecamera",{"_index":264,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["three.pointlight",{"_index":826,"title":{},"body":{"components/ModelComponent.html":{}}}],["three.pointlight(0x4b371c",{"_index":889,"title":{},"body":{"components/ModelComponent.html":{}}}],["three.scene",{"_index":285,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["three.textureloader",{"_index":277,"title":{},"body":{"components/CubeComponent.html":{}}}],["three.webglrenderer",{"_index":283,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["three/examples/jsm/controls/orbitcontrols.js",{"_index":839,"title":{},"body":{"components/ModelComponent.html":{}}}],["three/examples/jsm/loaders/gltfloader.js",{"_index":838,"title":{},"body":{"components/ModelComponent.html":{}}}],["three/examples/jsm/renderers/css2drenderer.js",{"_index":841,"title":{},"body":{"components/ModelComponent.html":{}}}],["throw",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["throwerror",{"_index":656,"title":{},"body":{"injectables/DevicesService.html":{}}}],["title",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":428,"title":{},"body":{"classes/Device.html":{},"classes/DeviceList.html":{},"index.html":{}}}],["token",{"_index":1029,"title":{},"body":{"index.html":{}}}],["topromise",{"_index":762,"title":{},"body":{"components/HomeComponent.html":{}}}],["traffic",{"_index":363,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["transceiver",{"_index":365,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["triggerel.addeventlistener('click",{"_index":563,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["triggerel.addeventlistener(\\'click",{"_index":568,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["triggertablist",{"_index":557,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["triggertablist.foreach((triggerel",{"_index":560,"title":{},"body":{"components/DeviceOperationsComponent.html":{}}}],["true",{"_index":728,"title":{},"body":{"components/EditDeviceComponent.html":{},"components/ModelComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"classes/Device.html":{}}}],["tslib",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["turned",{"_index":1115,"title":{},"body":{"index.html":{}}}],["tutorial",{"_index":1002,"title":{},"body":{"index.html":{}}}],["two",{"_index":1000,"title":{},"body":{"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"classes/Bug.html":{},"components/CubeComponent.html":{},"interfaces/DataDeviceType.html":{},"classes/Device.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type_log",{"_index":786,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1158,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1081,"title":{},"body":{"index.html":{}}}],["types.ts",{"_index":1090,"title":{},"body":{"index.html":{}}}],["types/functions",{"_index":1082,"title":{},"body":{"index.html":{}}}],["types/lodash",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["types/values",{"_index":1086,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":376,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["unique",{"_index":409,"title":{},"body":{"classes/Device.html":{}}}],["uniquenamesgenerator",{"_index":408,"title":{},"body":{"classes/Device.html":{}}}],["unless",{"_index":1083,"title":{},"body":{"index.html":{}}}],["update",{"_index":742,"title":{},"body":{"components/EditDeviceComponent.html":{},"index.html":{}}}],["updatedevice",{"_index":628,"title":{},"body":{"injectables/DevicesService.html":{}}}],["updatedevice(id",{"_index":647,"title":{},"body":{"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{}}}],["updatedeviceform",{"_index":687,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["updateform",{"_index":690,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["ups",{"_index":366,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["usage",{"_index":1007,"title":{},"body":{"index.html":{}}}],["use",{"_index":321,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{},"index.html":{}}}],["user",{"_index":1124,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["usually",{"_index":1025,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":414,"title":{},"body":{"classes/Device.html":{}}}],["uuidv4",{"_index":413,"title":{},"body":{"classes/Device.html":{}}}],["v4",{"_index":412,"title":{},"body":{"classes/Device.html":{}}}],["validatorfn",{"_index":716,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["validators",{"_index":712,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["validators.required",{"_index":724,"title":{},"body":{"components/EditDeviceComponent.html":{}}}],["value",{"_index":54,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"classes/DeviceCategories.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1062,"title":{},"body":{"index.html":{}}}],["var",{"_index":89,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/AppComponent.html":{},"components/CubeComponent.html":{},"classes/DeviceCategories.html":{},"interfaces/DeviceCategoriesInterfance.html":{},"components/DeviceOperationsComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesListComponent.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"components/LogComponent.html":{},"components/ModelComponent.html":{}}}],["variable",{"_index":929,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":1065,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1156,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":290,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["viewchild('canvas",{"_index":268,"title":{},"body":{"components/CubeComponent.html":{},"components/ModelComponent.html":{}}}],["visible",{"_index":1123,"title":{},"body":{"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"components/AddDeviceComponent.html":{},"components/CubeComponent.html":{},"classes/Device.html":{},"classes/DeviceList.html":{},"components/DeviceOperationsComponent.html":{},"classes/DeviceTypes.html":{},"components/DevicesListComponent.html":{},"injectables/DevicesService.html":{},"components/EditDeviceComponent.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"components/ModelComponent.html":{}}}],["want",{"_index":1026,"title":{},"body":{"index.html":{}}}],["watch",{"_index":1038,"title":{},"body":{"index.html":{}}}],["we'll",{"_index":1003,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1044,"title":{},"body":{"index.html":{}}}],["whole",{"_index":1067,"title":{},"body":{"index.html":{}}}],["window.innerheight",{"_index":848,"title":{},"body":{"components/ModelComponent.html":{}}}],["within",{"_index":1091,"title":{},"body":{"index.html":{}}}],["words",{"_index":1068,"title":{},"body":{"index.html":{}}}],["works",{"_index":583,"title":{},"body":{"components/DevicesComponent.html":{}}}],["workstations",{"_index":367,"title":{},"body":{"interfaces/DataDeviceType.html":{},"classes/DeviceTypes.html":{}}}],["x.id",{"_index":609,"title":{},"body":{"components/DevicesListComponent.html":{}}}],["zone.js",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddDeviceComponent.html":{"url":"components/AddDeviceComponent.html","title":"component - AddDeviceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddDeviceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/add-device/add-device.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-device\n            \n\n            \n                styleUrls\n                ./add-device.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-device.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DeviceArr\n                            \n                            \n                                DeviceForm\n                            \n                            \n                                    Public\n                                devicesService\n                            \n                            \n                                    Public\n                                fb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDevice\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, ngZone: NgZone, router: Router, devicesService: DevicesService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/add-device/add-device.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DevicesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDevice\n                        \n                    \n                \n            \n            \n                \naddDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/add-device/add-device.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/add-device/add-device.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/add-device/add-device.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DeviceArr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-device/add-device.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeviceForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-device/add-device.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        devicesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DevicesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-device/add-device.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-device/add-device.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core'\nimport { DevicesService } from './../../services/devices.service'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { LogService } from '../../services/log.service'\n\n@Component({\n  selector: 'app-add-device',\n  templateUrl: './add-device.component.html',\n  styleUrls: ['./add-device.component.scss'],\n})\nexport class AddDeviceComponent implements OnInit {\n  DeviceForm: FormGroup\n  DeviceArr: any = []\n  ngOnInit() {\n    this.addDevice()\n  }\n  constructor(\n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    public devicesService: DevicesService,\n    private logService: LogService\n  ) {}\n  addDevice() {\n    this.DeviceForm = this.fb.group({\n      id: [''],\n      name: [''],\n      type: [''],\n      category: [''],\n    })\n  }\n  submitForm() {\n    this.devicesService.CreateDevice(this.DeviceForm.value).subscribe((res) => {\n      console.log('Device added!')\n      this.logService.add({\n        message: 'Added device: ' + this.DeviceForm.value,\n        category: 'Info',\n        component: 'AddDevice',\n      })\n      this.ngZone.run(() => this.router.navigateByUrl('/devices-list'))\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add Issue\n      \n        \n          Id\n          \n        \n        \n          Name\n          \n        \n        \n          Type\n          \n        \n        \n          Category\n          \n        \n        Submit\n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./add-device.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add Issue                        Id                                    Name                                    Type                                    Category                          Submit              '\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddDeviceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'angular-three'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-three';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAddDeviceComponent\n\nAddDeviceComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddDeviceComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCubeComponent\n\nCubeComponent\n\nAppModule -->\n\nCubeComponent->AppModule\n\n\n\n\n\nDeviceOperationsComponent\n\nDeviceOperationsComponent\n\nAppModule -->\n\nDeviceOperationsComponent->AppModule\n\n\n\n\n\nDevicesComponent\n\nDevicesComponent\n\nAppModule -->\n\nDevicesComponent->AppModule\n\n\n\n\n\nDevicesListComponent\n\nDevicesListComponent\n\nAppModule -->\n\nDevicesListComponent->AppModule\n\n\n\n\n\nEditDeviceComponent\n\nEditDeviceComponent\n\nAppModule -->\n\nEditDeviceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLogComponent\n\nLogComponent\n\nAppModule -->\n\nLogComponent->AppModule\n\n\n\n\n\nModelComponent\n\nModelComponent\n\nAppModule -->\n\nModelComponent->AppModule\n\n\n\n\n\nDevicesComponent \n\nDevicesComponent \n\nDevicesComponent  -->\n\nAppModule->DevicesComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDevicesService\n\nDevicesService\n\nAppModule -->\n\nDevicesService->AppModule\n\n\n\n\n\nLogService\n\nLogService\n\nAppModule -->\n\nLogService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddDeviceComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CubeComponent\n                        \n                        \n                            DeviceOperationsComponent\n                        \n                        \n                            DevicesComponent\n                        \n                        \n                            DevicesListComponent\n                        \n                        \n                            EditDeviceComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LogComponent\n                        \n                        \n                            ModelComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DevicesService\n                        \n                        \n                            LogService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DevicesComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { ApiModule } from 'projects/swagger-client/src/api.module'\nimport { BASE_PATH } from 'swagger-client'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { AddDeviceComponent } from './components/add-device/add-device.component'\nimport { DevicesListComponent } from './components/devices-list/devices-list.component'\nimport { EditDeviceComponent } from './components/edit-device/edit-device.component'\nimport { CubeComponent } from './cube/cube.component'\nimport { DeviceOperationsComponent } from './device-operations/device-operations.component'\nimport { DevicesComponent } from './devices/devices.component'\nimport { HomeComponent } from './home/home.component'\nimport { LogComponent } from './log/log.component'\nimport { ModelComponent } from './model/model.component'\nimport { DevicesService } from './services/devices.service'\nimport { LogService } from './services/log.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CubeComponent,\n    ModelComponent,\n    HomeComponent,\n    DeviceOperationsComponent,\n    DevicesComponent,\n    LogComponent,\n    DevicesListComponent,\n    EditDeviceComponent,\n    AddDeviceComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    // ApiModule.forRoot(getApiConfiguration),\n    ApiModule,\n  ],\n  providers: [\n    { provide: BASE_PATH, useValue: 'http://localhost:8080' },\n    DevicesService,\n    LogService,\n  ],\n  bootstrap: [AppComponent],\n  exports: [DevicesComponent],\n})\nexport class AppModule {}\n// function getApiConfiguration(): Configuration {\n//   try {\n//     console.log('✳️ getApiConfiguration')\n//   } catch (error) {\n//     throw new Error('Function getApiConfiguration not implemented.')\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DevicesComponent } from './devices/devices.component'\nimport { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { CubeComponent } from './cube/cube.component'\nimport { ModelComponent } from './model/model.component'\nimport { HomeComponent } from './home/home.component'\nimport { DeviceOperationsComponent } from './device-operations/device-operations.component'\nimport { DevicesListComponent } from './components/devices-list/devices-list.component'\nimport { EditDeviceComponent } from './components/edit-device/edit-device.component'\nimport { AddDeviceComponent } from './components/add-device/add-device.component'\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'cube',\n    component: CubeComponent,\n  },\n  {\n    path: 'device-operations',\n    component: DeviceOperationsComponent,\n  },\n  {\n    path: 'model',\n    component: ModelComponent,\n  },\n  {\n    path: 'devices-list',\n    component: DevicesListComponent,\n  },\n  {\n    path: 'edit-device/:id',\n    component: EditDeviceComponent,\n  },\n  {\n    path: 'add-device',\n    component: AddDeviceComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bug.html":{"url":"classes/Bug.html","title":"class - Bug","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bug\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/bug.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                issue_message\n                            \n                            \n                                issue_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/bug.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issue_message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/bug.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issue_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/bug.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bug {\n  id: string\n  issue_name: string\n  issue_message: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CubeComponent.html":{"url":"components/CubeComponent.html","title":"component - CubeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CubeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cube/cube.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cube\n            \n\n            \n                styleUrls\n                ./cube.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cube.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                canvasRef\n                            \n                            \n                                    Private\n                                cube\n                            \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                renderer\n                            \n                            \n                                    Private\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animateCube\n                            \n                            \n                                    Private\n                                createScene\n                            \n                            \n                                    Private\n                                getAspectRatio\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                startRenderingLoop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cameraZ\n                            \n                            \n                                farClipping\n                            \n                            \n                                fieldOfView\n                            \n                            \n                                nearClipping\n                            \n                            \n                                rotationSpeedX\n                            \n                            \n                                rotationSpeedY\n                            \n                            \n                                size\n                            \n                            \n                                texture\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/cube/cube.component.ts:110\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cameraZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n                        \n                            \n                                    Defined in src/app/cube/cube.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        farClipping\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                        \n                            \n                                    Defined in src/app/cube/cube.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldOfView\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/cube/cube.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nearClipping\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/cube/cube.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotationSpeedX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.015\n                    \n                \n                        \n                            \n                                    Defined in src/app/cube/cube.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotationSpeedY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.004\n                    \n                \n                        \n                            \n                                    Defined in src/app/cube/cube.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in src/app/cube/cube.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        texture\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/r710-2.5-nobezel__29341.png'\n                    \n                \n                        \n                            \n                                    Defined in src/app/cube/cube.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        animateCube\n                        \n                    \n                \n            \n            \n                \n                    \n                    animateCube()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cube/cube.component.ts:60\n                \n            \n\n\n            \n                \n                    Animate the cube\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    createScene()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cube/cube.component.ts:71\n                \n            \n\n\n            \n                \n                    Create the scene\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getAspectRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAspectRatio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cube/cube.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cube/cube.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cube/cube.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startRenderingLoop\n                        \n                    \n                \n            \n            \n                \n                    \n                    startRenderingLoop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cube/cube.component.ts:97\n                \n            \n\n\n            \n                \n                    Start the rendering loop\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/app/cube/cube.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/cube/cube.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cube\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Mesh\n\n                    \n                \n                \n                    \n                        Default value : new THREE.Mesh(this.geometry, this.material)\n                    \n                \n                    \n                        \n                                Defined in src/app/cube/cube.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.BoxGeometry(4, 2, 1)\n                    \n                \n                    \n                        \n                                Defined in src/app/cube/cube.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.TextureLoader()\n                    \n                \n                    \n                        \n                                Defined in src/app/cube/cube.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.MeshBasicMaterial({\n    map: this.loader.load(this.texture),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/cube/cube.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in src/app/cube/cube.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in src/app/cube/cube.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/cube/cube.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'app-cube',\n  templateUrl: './cube.component.html',\n  styleUrls: ['./cube.component.scss'],\n})\nexport class CubeComponent implements OnInit, AfterViewInit {\n  @ViewChild('canvas')\n  private canvasRef: ElementRef;\n\n  //* Cube Properties\n\n  @Input() public rotationSpeedX: number = 0.015;\n  @Input() public rotationSpeedY: number = 0.004;\n  @Input() public size: number = 200;\n  @Input() public texture: string = '/assets/r710-2.5-nobezel__29341.png';\n\n  //* Stage Properties\n\n  @Input() public cameraZ: number = 400;\n  @Input() public fieldOfView: number = 1;\n  @Input('nearClipping') public nearClippingPlane: number = 1;\n  @Input('farClipping') public farClippingPlane: number = 1000;\n\n  //? Helper Properties (Private Properties);\n\n  private camera!: THREE.PerspectiveCamera;\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n  private loader = new THREE.TextureLoader();\n  private geometry = new THREE.BoxGeometry(4, 2, 1);\n  private material = new THREE.MeshBasicMaterial({\n    map: this.loader.load(this.texture),\n  });\n  // material.env = envTexture\n\n  private cube: THREE.Mesh = new THREE.Mesh(this.geometry, this.material);\n\n  private renderer!: THREE.WebGLRenderer;\n\n  private scene!: THREE.Scene;\n\n  /**\n   *Animate the cube\n   *\n   * @private\n   * @memberof CubeComponent\n   */\n  private animateCube() {\n    this.cube.rotation.x += this.rotationSpeedX;\n    this.cube.rotation.y += this.rotationSpeedY;\n  }\n\n  /**\n   * Create the scene\n   *\n   * @private\n   * @memberof CubeComponent\n   */\n  private createScene() {\n    //* Scene\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0x000000);\n    this.scene.add(this.cube);\n    //*Camera\n    let aspectRatio = this.getAspectRatio();\n    this.camera = new THREE.PerspectiveCamera(\n      this.fieldOfView,\n      aspectRatio,\n      this.nearClippingPlane,\n      this.farClippingPlane\n    );\n    this.camera.position.z = this.cameraZ;\n  }\n\n  private getAspectRatio() {\n    return this.canvas.clientWidth / this.canvas.clientHeight;\n  }\n\n  /**\n   * Start the rendering loop\n   *\n   * @private\n   * @memberof CubeComponent\n   */\n  private startRenderingLoop() {\n    //* Renderer\n    // Use canvas element in template\n    this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas });\n    this.renderer.setPixelRatio(devicePixelRatio);\n    this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\n\n    let component: CubeComponent = this;\n    (function render() {\n      requestAnimationFrame(render);\n      component.animateCube();\n      component.renderer.render(component.scene, component.camera);\n    })();\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.createScene();\n    this.startRenderingLoop();\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./cube.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CubeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataDeviceType.html":{"url":"interfaces/DataDeviceType.html","title":"interface - DataDeviceType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataDeviceType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DeviceType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DeviceType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DeviceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type deviceTypeType = {\n  DeviceType: string\n}\n\ninterface DataDeviceType {\n  DeviceType: string\n}\n\nexport class DeviceTypes {\n  deviceTypeList: DataDeviceType[] = [\n    { DeviceType: 'Bridge' },\n    { DeviceType: 'CoolAir' },\n    { DeviceType: 'Copier' },\n    { DeviceType: 'Desktop' },\n    { DeviceType: 'Firewall' },\n    { DeviceType: 'Getaway' },\n    { DeviceType: 'Hubs' },\n    { DeviceType: 'Load Balancer' },\n    { DeviceType: 'Modem' },\n    { DeviceType: 'Multiplexer' },\n    { DeviceType: 'PDU System' },\n    { DeviceType: 'Power' },\n    { DeviceType: 'Printer' },\n    { DeviceType: 'Probe' },\n    { DeviceType: 'Repeaters' },\n    { DeviceType: 'Router' },\n    { DeviceType: 'Security Device' },\n    { DeviceType: 'Server' },\n    { DeviceType: 'Switch' },\n    { DeviceType: 'Telephone' },\n    { DeviceType: 'Terminal' },\n    { DeviceType: 'Traffic shaper' },\n    { DeviceType: 'Transceiver' },\n    { DeviceType: 'UPS System' },\n    { DeviceType: 'Workstations' },\n  ]\n  get(): { DeviceType: string }[] {\n    return this.deviceTypeList\n  }\n\n  /**\n   * Return random type from deviceTypeList\n   * @return {*}  {string}\n   * @memberof DeviceTypes\n   */\n  getRandom(): string {\n    return this.deviceTypeList[\n      Math.floor(Math.random() * this.deviceTypeList.length)\n    ].DeviceType\n  }\n  /**\n   *\n   *\n   * @param {string} search\n   * @return {*}  {string}\n   * @memberof DeviceTypes\n   */\n  findType(search: string): string | undefined {\n    const element = this.deviceTypeList.find((e) => e.DeviceType === search)\n    return element?.DeviceType || search // element?.DeviceType || search\n  }\n\n  findObj(obj: deviceTypeType) {\n    for (let i = 0; i ', obj)\n      }\n    }\n  }\n}\n\nconst devicesT = new DeviceTypes()\nconst f = devicesT.findType('Probe')\nconsole.log('-->', f)\n\n// Function loop over the array,\n// then check if the type property is equal to the property in each object of the array\n\nfunction findObj(arr: Array, obj: deviceTypeType) {\n  for (let i = 0; i ', obj)\n    }\n  }\n}\n\nfindObj(devicesT.deviceTypeList, { DeviceType: 'Workstations' })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Device.html":{"url":"classes/Device.html","title":"class - Device","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Device\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/device.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getString\n                            \n                            \n                                print\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/device.ts:28\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceCategoriesInterfance\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getString\n                        \n                    \n                \n            \n            \n                \ngetString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/device.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        print\n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/device.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  adjectives,\n  animals,\n  colors,\n  uniqueNamesGenerator,\n} from 'unique-names-generator'\nimport { v4 as uuidv4 } from 'uuid'\nimport {\n  DeviceCategories,\n  DeviceCategoriesInterfance,\n} from './deviceCategories'\nimport { DeviceTypes } from './deviceTypes'\n\nexport class Device {\n  id: string\n  name: string\n  type: string\n  category: DeviceCategoriesInterfance\n\n  constructor() {\n    this.id = uuidv4()\n    this.name = uniqueNamesGenerator({\n      dictionaries: [adjectives, colors, animals],\n      style: 'lowerCase',\n      separator: '-',\n    }) // big_red_donkey\n    this.type = new DeviceTypes().getRandom()\n    this.category = new DeviceCategories().getRandom()\n  }\n\n  print() {\n    console.log(\n      '-->[device] id: ' +\n        this.id +\n        ', name: ' +\n        this.name +\n        ', type: ' +\n        this.type +\n        ', category: ' +\n        this.category.Category\n    )\n  }\n\n  getString(): string {\n    return (\n      '-->[device] id: ' +\n      this.id +\n      ', name: ' +\n      this.name +\n      ', type: ' +\n      this.type +\n      ', category: ' +\n      this.category.Category\n    )\n  }\n}\n\n// @TODO: #1 Generate 100 random records\n//\n\n// console.log('Generate devicesList')\n// export const devicesList: Device[] = []\n\n// try {\n//   for (let index = 0; index  {\n//   console.log(i + 1, element.getString())\n// })\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceCategories.html":{"url":"classes/DeviceCategories.html","title":"class - DeviceCategories","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceCategories\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceCategories.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceCategories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findCategory\n                            \n                            \n                                findCategoryImplementation\n                            \n                            \n                                    Public\n                                getRandom\n                            \n                            \n                                    Public\n                                getRandomCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceCategoriesInterfance[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      Category: 'Connectivity',\n      Description:\n        'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      Category: 'Facility',\n      Description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      Category: 'Site',\n      Description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceCategories.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findCategory\n                        \n                    \n                \n            \n            \n                \nfindCategory(deviceCategory: DeviceCategoriesInterfance, searchCategory: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceCategories.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceCategory\n                                    \n                                                DeviceCategoriesInterfance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchCategory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findCategoryImplementation\n                        \n                    \n                \n            \n            \n                \nfindCategoryImplementation(this: any, searchCategory: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceCategories.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchCategory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DeviceCategoriesInterfance[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRandom\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceCategories.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DeviceCategoriesInterfance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRandomCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandomCategory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceCategories.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface DeviceCategoriesInterfance {\n  Category: string\n  Description: string\n}\n\nexport class DeviceCategories {\n  deviceCategories: DeviceCategoriesInterfance[] = [\n    {\n      Category: 'Connectivity',\n      Description:\n        'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      Category: 'Facility',\n      Description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      Category: 'Site',\n      Description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n\n  public getRandomCategory(): string {\n    return this.deviceCategories[\n      Math.floor(Math.random() * this.deviceCategories.length)\n    ].Category\n  }\n\n  findCategory(\n    deviceCategory: DeviceCategoriesInterfance,\n    searchCategory: string\n  ) {\n    return deviceCategory.Category == searchCategory\n  }\n\n  findCategoryImplementation(\n    this: any,\n    searchCategory: string\n  ): DeviceCategoriesInterfance[] {\n    return this.deviceCategories.find(this.findCategory(searchCategory))\n  }\n\n  // getCat(category: string): string {\n  //   return this.deviceCategories.find((element) => element.Category === category)?.Category\n  // }\n\n  public getRandom(): DeviceCategoriesInterfance {\n    return this.deviceCategories[\n      Math.floor(Math.random() * this.deviceCategories.length)\n    ]\n  }\n}\n\n// var devicesT = new DeviceCategory()\n// var r = devicesT.findCategoryImplementation('Site')\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceCategoriesInterfance.html":{"url":"interfaces/DeviceCategoriesInterfance.html","title":"interface - DeviceCategoriesInterfance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeviceCategoriesInterfance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceCategories.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Category\n                                        \n                                \n                                \n                                        \n                                            Description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeviceCategoriesInterfance {\n  Category: string\n  Description: string\n}\n\nexport class DeviceCategories {\n  deviceCategories: DeviceCategoriesInterfance[] = [\n    {\n      Category: 'Connectivity',\n      Description:\n        'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      Category: 'Facility',\n      Description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      Category: 'Site',\n      Description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n\n  public getRandomCategory(): string {\n    return this.deviceCategories[\n      Math.floor(Math.random() * this.deviceCategories.length)\n    ].Category\n  }\n\n  findCategory(\n    deviceCategory: DeviceCategoriesInterfance,\n    searchCategory: string\n  ) {\n    return deviceCategory.Category == searchCategory\n  }\n\n  findCategoryImplementation(\n    this: any,\n    searchCategory: string\n  ): DeviceCategoriesInterfance[] {\n    return this.deviceCategories.find(this.findCategory(searchCategory))\n  }\n\n  // getCat(category: string): string {\n  //   return this.deviceCategories.find((element) => element.Category === category)?.Category\n  // }\n\n  public getRandom(): DeviceCategoriesInterfance {\n    return this.deviceCategories[\n      Math.floor(Math.random() * this.deviceCategories.length)\n    ]\n  }\n}\n\n// var devicesT = new DeviceCategory()\n// var r = devicesT.findCategoryImplementation('Site')\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceList.html":{"url":"classes/DeviceList.html","title":"class - DeviceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceList.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                print\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceList.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceList.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Device[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        print\n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceList.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(device: Device)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceList.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    device\n                                    \n                                                Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Device } from './device'\n\n// @TODO #2: Create class deviceLists operated on list of devices\n// @TODO #3: Get list/Find in list\n\nexport class DeviceList {\n  deviceList: Device[] = []\n\n  print() {\n    this.deviceList.forEach((element) => {\n      element.print()\n    })\n  }\n\n  get(): Device[] {\n    return this.deviceList\n  }\n\n  push(device: Device) {\n    this.deviceList.push(device)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceOperationsComponent.html":{"url":"components/DeviceOperationsComponent.html","title":"component - DeviceOperationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeviceOperationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/device-operations/device-operations.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-device-operations\n            \n\n            \n                styleUrls\n                ./device-operations.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./device-operations.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceCategory\n                            \n                            \n                                deviceList\n                            \n                            \n                                deviceTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDevice\n                            \n                            \n                                getDevices\n                            \n                            \n                                getDeviceType\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                share\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/device-operations/device-operations.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDevice\n                        \n                    \n                \n            \n            \n                \naddDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/device-operations/device-operations.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevices\n                        \n                    \n                \n            \n            \n                \ngetDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/device-operations/device-operations.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceType\n                        \n                    \n                \n            \n            \n                \ngetDeviceType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/device-operations/device-operations.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/device-operations/device-operations.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        share\n                        \n                    \n                \n            \n            \n                \nshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/device-operations/device-operations.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DeviceCategories()\n                    \n                \n                    \n                        \n                                Defined in src/app/device-operations/device-operations.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/device-operations/device-operations.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceTypes\n\n                    \n                \n                \n                    \n                        Default value : new DeviceTypes()\n                    \n                \n                    \n                        \n                                Defined in src/app/device-operations/device-operations.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { LogService } from './../services/log.service'\n\nimport { Device } from '../shared/device'\nimport { DeviceCategories } from './../shared/deviceCategories'\nimport { DeviceTypes } from './../shared/deviceTypes'\n\n@Component({\n  selector: 'app-device-operations',\n  templateUrl: './device-operations.component.html',\n  styleUrls: ['./device-operations.component.scss'],\n})\nexport class DeviceOperationsComponent {\n  deviceList: Device[] = []\n  deviceTypes: DeviceTypes = new DeviceTypes()\n  deviceCategory = new DeviceCategories()\n\n  // nameControl = new FormControl('')\n\n  constructor(private logService: LogService) {\n    console.log('🐛 1')\n  }\n\n  ngOnInit(): void {\n    this.getDevices()\n    this.logService.add({\n      message: '🐛 Share()',\n      category: 'Info',\n      component: 'DeviceOperation.Share',\n    })\n    for (let index = 0; index \n    \n\n    \n        Add devices\n\n\n  \n    \n      Name\n      \n    \n\n    \n      Category\n      \n        \n          {{ item.Category }}\n        \n      \n    \n\n    \n      Type\n      \n        \n          {{ item.DeviceType }}\n        \n      \n    \n  \n\n  \n    \n       Add device\n    \n  \n\n\nList devices\n\n\n  \n    \n      \n        \n          \n            \n              \n                {{ deviceItem.name }}\n              \n              \n                {{ deviceItem.category.Category }}\n              \n              \n                {{ deviceItem.type }}\n              \n            \n          \n        \n      \n    \n\n    \n      \n        \n          {{ deviceItem.category.Description }}\n        \n      \n    \n  \n\n\n\n  const triggerTabList = document.querySelectorAll('#list-tab a')\n  triggerTabList.forEach((triggerEl) => {\n    const tabTrigger = new bootstrap.Tab(triggerEl)\n\n    triggerEl.addEventListener('click', (event) => {\n      event.preventDefault()\n      tabTrigger.show()\n    })\n  })\n\n\n\n\n    \n\n    \n                \n                    ./device-operations.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add devices            Name                    Category                        {{ item.Category }}                            Type                        {{ item.DeviceType }}                                 Add device      List devices                                                                        {{ deviceItem.name }}                                            {{ deviceItem.category.Category }}                                            {{ deviceItem.type }}                                                                                  {{ deviceItem.category.Description }}                      const triggerTabList = document.querySelectorAll(\\'#list-tab a\\')  triggerTabList.forEach((triggerEl) => {    const tabTrigger = new bootstrap.Tab(triggerEl)    triggerEl.addEventListener(\\'click\\', (event) => {      event.preventDefault()      tabTrigger.show()    })  })'\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceOperationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   "},"classes/DeviceTypes.html":{"url":"classes/DeviceTypes.html","title":"class - DeviceTypes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceTypes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceTypes.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceTypeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findObj\n                            \n                            \n                                findType\n                            \n                            \n                                get\n                            \n                            \n                                getRandom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataDeviceType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { DeviceType: 'Bridge' },\n    { DeviceType: 'CoolAir' },\n    { DeviceType: 'Copier' },\n    { DeviceType: 'Desktop' },\n    { DeviceType: 'Firewall' },\n    { DeviceType: 'Getaway' },\n    { DeviceType: 'Hubs' },\n    { DeviceType: 'Load Balancer' },\n    { DeviceType: 'Modem' },\n    { DeviceType: 'Multiplexer' },\n    { DeviceType: 'PDU System' },\n    { DeviceType: 'Power' },\n    { DeviceType: 'Printer' },\n    { DeviceType: 'Probe' },\n    { DeviceType: 'Repeaters' },\n    { DeviceType: 'Router' },\n    { DeviceType: 'Security Device' },\n    { DeviceType: 'Server' },\n    { DeviceType: 'Switch' },\n    { DeviceType: 'Telephone' },\n    { DeviceType: 'Terminal' },\n    { DeviceType: 'Traffic shaper' },\n    { DeviceType: 'Transceiver' },\n    { DeviceType: 'UPS System' },\n    { DeviceType: 'Workstations' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceTypes.ts:29\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findObj\n                        \n                    \n                \n            \n            \n                \nfindObj(obj: deviceTypeType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceTypes.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                deviceTypeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findType\n                        \n                    \n                \n            \n            \n                \nfindType(search: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceTypes.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string | undefined\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceTypes.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandom\n                        \n                    \n                \n            \n            \n                \ngetRandom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/deviceTypes.ts:65\n                \n            \n\n\n            \n                \n                    Return random type from deviceTypeList\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type deviceTypeType = {\n  DeviceType: string\n}\n\ninterface DataDeviceType {\n  DeviceType: string\n}\n\nexport class DeviceTypes {\n  deviceTypeList: DataDeviceType[] = [\n    { DeviceType: 'Bridge' },\n    { DeviceType: 'CoolAir' },\n    { DeviceType: 'Copier' },\n    { DeviceType: 'Desktop' },\n    { DeviceType: 'Firewall' },\n    { DeviceType: 'Getaway' },\n    { DeviceType: 'Hubs' },\n    { DeviceType: 'Load Balancer' },\n    { DeviceType: 'Modem' },\n    { DeviceType: 'Multiplexer' },\n    { DeviceType: 'PDU System' },\n    { DeviceType: 'Power' },\n    { DeviceType: 'Printer' },\n    { DeviceType: 'Probe' },\n    { DeviceType: 'Repeaters' },\n    { DeviceType: 'Router' },\n    { DeviceType: 'Security Device' },\n    { DeviceType: 'Server' },\n    { DeviceType: 'Switch' },\n    { DeviceType: 'Telephone' },\n    { DeviceType: 'Terminal' },\n    { DeviceType: 'Traffic shaper' },\n    { DeviceType: 'Transceiver' },\n    { DeviceType: 'UPS System' },\n    { DeviceType: 'Workstations' },\n  ]\n  get(): { DeviceType: string }[] {\n    return this.deviceTypeList\n  }\n\n  /**\n   * Return random type from deviceTypeList\n   * @return {*}  {string}\n   * @memberof DeviceTypes\n   */\n  getRandom(): string {\n    return this.deviceTypeList[\n      Math.floor(Math.random() * this.deviceTypeList.length)\n    ].DeviceType\n  }\n  /**\n   *\n   *\n   * @param {string} search\n   * @return {*}  {string}\n   * @memberof DeviceTypes\n   */\n  findType(search: string): string | undefined {\n    const element = this.deviceTypeList.find((e) => e.DeviceType === search)\n    return element?.DeviceType || search // element?.DeviceType || search\n  }\n\n  findObj(obj: deviceTypeType) {\n    for (let i = 0; i ', obj)\n      }\n    }\n  }\n}\n\nconst devicesT = new DeviceTypes()\nconst f = devicesT.findType('Probe')\nconsole.log('-->', f)\n\n// Function loop over the array,\n// then check if the type property is equal to the property in each object of the array\n\nfunction findObj(arr: Array, obj: deviceTypeType) {\n  for (let i = 0; i ', obj)\n    }\n  }\n}\n\nfindObj(devicesT.deviceTypeList, { DeviceType: 'Workstations' })\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesComponent.html":{"url":"components/DevicesComponent.html","title":"component - DevicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/devices/devices.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices\n            \n\n            \n                styleUrls\n                ./devices.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./devices.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-devices',\n  templateUrl: './devices.component.html',\n  styleUrls: ['./devices.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DevicesComponent {\n\n}\n\n    \n\n    \n        devices works!\n\n    \n\n    \n                \n                    ./devices.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'devices works!'\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesListComponent.html":{"url":"components/DevicesListComponent.html","title":"component - DevicesListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/devices-list/devices-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices-list\n            \n\n            \n                styleUrls\n                ./devices-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./devices-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DevicesList\n                            \n                            \n                                    Public\n                                devicesService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddForm\n                            \n                            \n                                deleteDevice\n                            \n                            \n                                loadDevices\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(devicesService: DevicesService, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/devices-list/devices-list.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of DevicesListComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DevicesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddForm\n                        \n                    \n                \n            \n            \n                \nAddForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/devices-list/devices-list.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDevice\n                        \n                    \n                \n            \n            \n                \ndeleteDevice(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/devices-list/devices-list.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDevices\n                        \n                    \n                \n            \n            \n                \nloadDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/devices-list/devices-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/devices-list/devices-list.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DevicesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices-list/devices-list.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        devicesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DevicesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices-list/devices-list.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DevicesService } from './../../services/devices.service'\nimport { Component, OnInit, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { Device } from 'src/app/shared/device'\nimport { LogService } from '../../services/log.service'\n\n@Component({\n  selector: 'app-devices-list',\n  templateUrl: './devices-list.component.html',\n  styleUrls: ['./devices-list.component.scss'],\n})\nexport class DevicesListComponent implements OnInit {\n  DevicesList: any = []\n\n  ngOnInit() {\n    this.loadDevices()\n  }\n  /**\n   * Creates an instance of DevicesListComponent.\n   * @param {DevicesService} devicesService\n   * @param {LogService} logService\n   * @param {NgZone} ngZone\n   * @param {Router} router\n   * @memberof DevicesListComponent\n   */\n  constructor(\n    public devicesService: DevicesService,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router\n  ) {}\n  /**\n   *\n   *\n   * @return {*}\n   * @memberof DevicesListComponent\n   */\n  loadDevices() {\n    this.logService.add({\n      message: 'Load data jonsonserver',\n      category: 'info',\n      component: 'ListComponent',\n    })\n    return this.devicesService.GetDevices().subscribe((data: any) => {\n      this.DevicesList = data\n    })\n  }\n\n  /**\n   *\n   *\n   * @param {{ id: any }} data\n   * @return {*}\n   * @memberof DevicesListComponent\n   */\n  deleteDevice(data: { id: any }) {\n    const index: any = this.DevicesList.map((x: any) => {\n      return x.id\n    }).indexOf(data.id)\n    this.logService.add({\n      message: 'Delete device: ' + data.id,\n      category: 'Info',\n      component: 'DevicesListComponent',\n    })\n  }\n  /**\n   *\n   *\n   * @memberof DevicesListComponent\n   */\n  AddForm() {\n    this.ngZone.run(() => this.router.navigateByUrl('/devices-list'))\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        My Devices\n        \n          \n            \n              Id\n              Name\n              Type\n              Category\n              Opertions\n            \n          \n          \n            \n              {{ device.id }}\n              {{ device.name }}\n              {{ device.type }}\n              {{ device.category }}\n              \n                \n                  \n                    Edit\n                  \n                  \n                    Remove\n                  \n                \n              \n            \n          \n        \n        \n           Add\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./devices-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        My Devices                                            Id              Name              Type              Category              Opertions                                                          {{ device.id }}              {{ device.name }}              {{ device.type }}              {{ device.category }}                                                                    Edit                                                        Remove                                                                                                 Add                    '\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DevicesService.html":{"url":"injectables/DevicesService.html","title":"injectable - DevicesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DevicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/devices.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                devices\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clear\n                            \n                            \n                                CreateDevice\n                            \n                            \n                                DeleteDevice\n                            \n                            \n                                errorHandl\n                            \n                            \n                                GetDevice\n                            \n                            \n                                GetDevices\n                            \n                            \n                                UpdateDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/devices.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(device: Device)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/devices.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    device\n                                    \n                                                Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/devices.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateDevice\n                        \n                    \n                \n            \n            \n                \nCreateDevice(data: Device)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/devices.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteDevice\n                        \n                    \n                \n            \n            \n                \nDeleteDevice(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/devices.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        {Observable}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorHandl\n                        \n                    \n                \n            \n            \n                \nerrorHandl(error: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/devices.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDevice\n                        \n                    \n                \n            \n            \n                \nGetDevice(id: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/devices.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDevices\n                        \n                    \n                \n            \n            \n                \nGetDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/devices.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        {Observable}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateDevice\n                        \n                    \n                \n            \n            \n                \nUpdateDevice(id: string | null, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/devices.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/devices.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        devices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/devices.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/devices.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Device } from '../shared/device'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { retry, catchError } from 'rxjs/operators'\nimport { Injectable } from '@angular/core'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DevicesService {\n  baseurl = 'http://localhost:3000'\n\n  devices: Device[] = []\n\n  constructor(private http: HttpClient) {}\n  // Http Headers\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   *\n   *\n   * @return {*}  {Observable}\n   * @memberof DevicesService\n   */\n  GetDevices(): Observable {\n    return this.http\n      .get(this.baseurl + '/devices/')\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  GetDevice(id: string | null): Observable {\n    return this.http\n      .get(this.baseurl + '/devices/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   *\n   *\n   * @param {{ id: string }} { id }\n   * @return {*}  {Observable}\n   * @memberof DevicesService\n   */\n  DeleteDevice(id: string): Observable {\n    return this.http\n      .delete(this.baseurl + '/devices/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  // POST\n  CreateDevice(data: Device): Observable {\n    return this.http\n      .post(\n        this.baseurl + '/devices/',\n        JSON.stringify(data),\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  // PUT\n  UpdateDevice(id: string | null, data: any): Observable {\n    return this.http\n      .put(\n        this.baseurl + '/devices/' + id,\n        JSON.stringify(data),\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  add(device: Device) {\n    this.devices.push(device)\n  }\n\n  clear() {\n    this.devices = []\n  }\n\n  errorHandl(error: { error: { message: string }; status: any; message: any }) {\n    let errorMessage = ''\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`\n    }\n    console.log(errorMessage)\n    return throwError(() => {\n      return errorMessage\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDeviceComponent.html":{"url":"components/EditDeviceComponent.html","title":"component - EditDeviceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditDeviceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/edit-device/edit-device.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-device\n            \n\n            \n                styleUrls\n                ./edit-device.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-device.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chosenTypeObj\n                            \n                            \n                                deviceCategories\n                            \n                            \n                                DevicesList\n                            \n                            \n                                    Public\n                                devicesService\n                            \n                            \n                                deviceTypes\n                            \n                            \n                                    Public\n                                fb\n                            \n                            \n                                updateDeviceForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeCategory\n                            \n                            \n                                changeType\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(actRoute: ActivatedRoute, devicesService: DevicesService, fb: FormBuilder, ngZone: NgZone, router: Router, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/edit-device/edit-device.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DevicesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeCategory\n                        \n                    \n                \n            \n            \n                \nchangeCategory(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/edit-device/edit-device.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeType\n                        \n                    \n                \n            \n            \n                \nchangeType(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/edit-device/edit-device.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/edit-device/edit-device.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/edit-device/edit-device.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n            \n                \nupdateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/edit-device/edit-device.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chosenTypeObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-device/edit-device.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceCategories\n\n                    \n                \n                \n                    \n                        Default value : new DeviceCategories()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-device/edit-device.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DevicesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-device/edit-device.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        devicesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DevicesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-device/edit-device.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceTypes\n\n                    \n                \n                \n                    \n                        Default value : new DeviceTypes()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-device/edit-device.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-device/edit-device.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDeviceForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-device/edit-device.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/edit-device/edit-device.component.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n                \n                    \n                        getcategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/edit-device/edit-device.component.ts:63\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { Device } from 'src/app/shared/device'\nimport { DevicesService } from './../../services/devices.service'\nimport { LogService } from './../../services/log.service'\nimport { DeviceTypes } from 'src/app/shared/deviceTypes'\nimport {\n  FormsModule,\n  FormArray,\n  FormControl,\n  ValidatorFn,\n} from '@angular/forms'\nimport { DeviceCategories } from 'src/app/shared/deviceCategories'\n\n@Component({\n  selector: 'app-edit-device',\n  templateUrl: './edit-device.component.html',\n  styleUrls: ['./edit-device.component.scss'],\n})\nexport class EditDeviceComponent implements OnInit {\n  DevicesList: any = []\n  updateDeviceForm: FormGroup\n\n  deviceTypes: DeviceTypes = new DeviceTypes()\n  deviceCategories: DeviceCategories = new DeviceCategories()\n  chosenTypeObj: any\n\n  ngOnInit() {\n    this.updateForm()\n  }\n\n  constructor(\n    private actRoute: ActivatedRoute,\n    public devicesService: DevicesService,\n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private logService: LogService\n  ) {\n    const id: string | null = this.actRoute.snapshot.paramMap.get('id')\n    this.devicesService.GetDevice(id).subscribe((data: Device) => {\n      this.updateDeviceForm = this.fb.group({\n        id: [data.id],\n        name: [data.name],\n        type: [data.type, Validators.required],\n        category: [data.category, Validators.required],\n      })\n    })\n  }\n\n  changeType(e: any) {\n    this.type?.setValue(e.target.value, { onlySelf: true })\n  }\n\n  changeCategory(e: any) {\n    this.category?.setValue(e.target.value, { onlySelf: true })\n  }\n  // Access formcontrols getter\n  get type() {\n    return this.updateDeviceForm.get('type')\n  }\n  get category() {\n    return this.updateDeviceForm.get('category')\n  }\n  updateForm() {\n    this.logService.add({\n      message: 'Edit device: ' + this.actRoute.snapshot.paramMap.get('id'),\n      category: 'Info',\n      component: 'EditDeviceComponent.updateForm',\n    })\n    this.updateDeviceForm = this.fb.group({\n      id: [''],\n      name: [''],\n      type: ['', Validators.required],\n      category: ['', Validators.required],\n    })\n  }\n\n  submitForm() {\n    const id: string | null = this.actRoute.snapshot.paramMap.get('id')\n\n    this.logService.add({\n      message:\n        'Edit device: ' +\n        this.actRoute.snapshot.paramMap.get('id') +\n        ' ' +\n        this.actRoute.snapshot.paramMap.get('name'),\n      category: 'Info',\n      component: 'EditDeviceComponent.SubmitForm',\n    })\n\n    this.devicesService\n      .UpdateDevice(id, this.updateDeviceForm.value)\n      .subscribe((res) => {\n        this.ngZone.run(() => this.router.navigateByUrl('/devices-list'))\n      })\n  }\n}\n\n    \n\n    \n        [i]\n  \n    \n    \n      Add Device\n      \n        \n          Id\n          \n        \n        \n          Name\n          \n        \n        \n          Type\n          \n            \n              {{ data.DeviceType }}\n            \n          \n        \n        \n          Category\n          \n            \n              {{ data.Category }}\n            \n          \n        \n        Update\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./edit-device.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '[i]                Add Device                        Id                                    Name                                    Type                                    {{ data.DeviceType }}                                                Category                                    {{ data.Category }}                                      Update            '\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDeviceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                md\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoad\n                        \n                    \n                \n            \n            \n                \nonLoad(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n  md: string | undefined\n  @Input() name: string\n  constructor(private http: HttpClient) {}\n\n  async ngOnInit() {\n    this.md = await this.http\n      .get('/assets/README.md', { responseType: 'text' })\n      .toPromise()\n  }\n\n  onLoad(data: any) {\n    console.log(this.md)\n  }\n\n  onError(data: any) {\n    console.log(this.md)\n  }\n}\n\n    \n\n    \n        README\n{{ md }}\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'README{{ md }}'\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogComponent.html":{"url":"components/LogComponent.html","title":"component - LogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/log/log.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log\n            \n\n            \n                styleUrls\n                ./log.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./log.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/log/log.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/log/log.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { LogService } from '../services/log.service'\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.scss'],\n})\nexport class LogComponent {\n  constructor(public logService: LogService) {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Logs\n          \n            \n              \n                #\n                Date\n                Category\n                Component\n                Message\n              \n            \n\n            \n              \n                {{ log.id }}\n                {{ log.date }}\n                {{ log.category }}\n                {{ log.component }}\n                {{ log.message }}\n              \n            \n          \n          \n            \n               Clear messages\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./log.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Logs                                                    #                Date                Category                Component                Message                                                                    {{ log.id }}                {{ log.date }}                {{ log.category }}                {{ log.component }}                {{ log.message }}                                                                         Clear messages                                          '\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/log.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/log.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :         type_log[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/log.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { getDateString } from '../shared/utils'\n\nexport type type_log = {\n  id: number\n  date: string\n  category: string\n  component: string\n  message: string\n}\n/**\n *\n *\n * @export\n * @class LogService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  id: number\n  log: type_log[] = []\n\n  constructor() {\n    this.id = 0\n  }\n  /**\n   *\n   *\n   * @param {string} message\n   * @memberof LogService\n   */\n  add({\n    message,\n    category,\n    component,\n  }: {\n    message: string\n    category: string\n    component: string\n  }) {\n    this.id = this.id + 1\n    const log: type_log = {\n      id: this.id,\n      date: getDateString(),\n      category: category,\n      component: component,\n      message: message,\n    }\n    this.log.push(log)\n  }\n\n  clear() {\n    this.log = []\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkdownService.html":{"url":"injectables/MarkdownService.html","title":"injectable - MarkdownService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MarkdownService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/markdown.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/markdown.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MarkdownService {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelComponent.html":{"url":"components/ModelComponent.html","title":"component - ModelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/model/model.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-model\n            \n\n            \n                styleUrls\n                ./model.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./model.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ambientLight\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                canvasRef\n                            \n                            \n                                    Private\n                                controls\n                            \n                            \n                                    Private\n                                createControls\n                            \n                            \n                                    Private\n                                directionalLight\n                            \n                            \n                                    Private\n                                light1\n                            \n                            \n                                    Private\n                                light2\n                            \n                            \n                                    Private\n                                light3\n                            \n                            \n                                    Private\n                                light4\n                            \n                            \n                                    Private\n                                loaderGLTF\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                renderer\n                            \n                            \n                                    Private\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animateModel\n                            \n                            \n                                    Private\n                                createScene\n                            \n                            \n                                    Private\n                                getAspectRatio\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                startRenderingLoop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                farClipping\n                            \n                            \n                                fieldOfView\n                            \n                            \n                                nearClipping\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model/model.component.ts:158\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        farClipping\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                        \n                            \n                                    Defined in src/app/model/model.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldOfView\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/model/model.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nearClipping\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/model/model.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        animateModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    animateModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/model.component.ts:62\n                \n            \n\n\n            \n                \n                    Animate the model\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    createScene()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/model.component.ts:93\n                \n            \n\n\n            \n                \n                    Create the scene\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getAspectRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAspectRatio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/model.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/model.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/model.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startRenderingLoop\n                        \n                    \n                \n            \n            \n                \n                    \n                    startRenderingLoop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/model.component.ts:146\n                \n            \n\n\n            \n                \n                    Start the rendering loop\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ambientLight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.AmbientLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrbitControls\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createControls\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:74\n                        \n                    \n\n            \n                \n                    create controls\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        directionalLight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.DirectionalLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        light1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.PointLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        light2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.PointLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        light3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.PointLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        light4\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.PointLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loaderGLTF\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GLTFLoader()\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/model.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/model.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport * as THREE from \"three\";\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { CSS2DRenderer } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.scss']\n})\n\nexport class ModelComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('canvas') private canvasRef: ElementRef;\n\n  //* Stage Properties\n\n  @Input() public fieldOfView: number = 1;\n\n  @Input('nearClipping') public nearClippingPane: number = 1;\n\n  @Input('farClipping') public farClippingPane: number = 1000;\n\n  //? Scene properties\n  private camera: THREE.PerspectiveCamera;\n\n  private controls: OrbitControls;\n\n  private ambientLight: THREE.AmbientLight;\n\n  private light1: THREE.PointLight;\n\n  private light2: THREE.PointLight;\n\n  private light3: THREE.PointLight;\n\n  private light4: THREE.PointLight;\n\n  private model: any;\n\n  private directionalLight: THREE.DirectionalLight;\n\n  //? Helper Properties (Private Properties);\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  private loaderGLTF = new GLTFLoader();\n\n  private renderer: THREE.WebGLRenderer;\n\n  private scene: THREE.Scene;\n\n  /**\n   *Animate the model\n   *\n   * @private\n   * @memberof ModelComponent\n   */\n  private animateModel() {\n    if (this.model) {\n      this.model.rotation.z += 0.005;\n    }\n  }\n\n  /**\n   *create controls\n   *\n   * @private\n   * @memberof ModelComponent\n   */\n  private createControls = () => {\n    const renderer = new CSS2DRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0px';\n    document.body.appendChild(renderer.domElement);\n    this.controls = new OrbitControls(this.camera, renderer.domElement);\n    this.controls.autoRotate = true;\n    this.controls.enableZoom = true;\n    this.controls.enablePan = false;\n    this.controls.update();\n  };\n\n  /**\n   * Create the scene\n   *\n   * @private\n   * @memberof CubeComponent\n   */\n  private createScene() {\n    //* Scene\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0xd4d4d8)\n    this.loaderGLTF.load('assets/robot/scene.gltf', (gltf: GLTF) => {\n      this.model = gltf.scene.children[0];\n      console.log(this.model);\n      var box = new THREE.Box3().setFromObject(this.model);\n      box.getCenter(this.model.position); // this re-sets the mesh position\n      this.model.position.multiplyScalar(-1);\n      this.scene.add(this.model);\n    });\n    //*Camera\n    let aspectRatio = this.getAspectRatio();\n    this.camera = new THREE.PerspectiveCamera(\n      this.fieldOfView,\n      aspectRatio,\n      this.nearClippingPane,\n      this.farClippingPane\n    )\n    this.camera.position.x = 100;\n    this.camera.position.y = 100;\n    this.camera.position.z = 100;\n    this.ambientLight = new THREE.AmbientLight(0x00000, 100);\n    this.scene.add(this.ambientLight);\n    this.directionalLight = new THREE.DirectionalLight(0xffdf04, 0.4);\n    this.directionalLight.position.set(0, 1, 0);\n    this.directionalLight.castShadow = true;\n    this.scene.add(this.directionalLight);\n    this.light1 = new THREE.PointLight(0x4b371c, 10);\n    this.light1.position.set(0, 200, 400);\n    this.scene.add(this.light1);\n    this.light2 = new THREE.PointLight(0x4b371c, 10);\n    this.light2.position.set(500, 100, 0);\n    this.scene.add(this.light2);\n    this.light3 = new THREE.PointLight(0x4b371c, 10);\n    this.light3.position.set(0, 100, -500);\n    this.scene.add(this.light3);\n    this.light4 = new THREE.PointLight(0x4b371c, 10);\n    this.light4.position.set(-500, 300, 500);\n    this.scene.add(this.light4);\n  }\n\n  private getAspectRatio() {\n    return this.canvas.clientWidth / this.canvas.clientHeight;\n  }\n\n/**\n * Start the rendering loop\n *\n * @private\n * @memberof CubeComponent\n */\n  private startRenderingLoop() {\n    //* Renderer\n    // Use canvas element in template\n    this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas, antialias: true });\n    this.renderer.setPixelRatio(devicePixelRatio);\n    this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\n    let component: ModelComponent = this;\n    (function render() {\n      component.renderer.render(component.scene, component.camera);\n      component.animateModel();\n      requestAnimationFrame(render);\n    }());\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  ngAfterViewInit() {\n    this.createScene();\n    this.startRenderingLoop();\n    this.createControls();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./model.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddDeviceComponent', 'selector': 'app-add-device'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceOperationsComponent', 'selector': 'app-device-operations'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesListComponent', 'selector': 'app-devices-list'},{'name': 'EditDeviceComponent', 'selector': 'app-edit-device'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelComponent', 'selector': 'app-model'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/add-device/add-device.component.ts\n            \n            component\n            AddDeviceComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/devices-list/devices-list.component.ts\n            \n            component\n            DevicesListComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/edit-device/edit-device.component.ts\n            \n            component\n            EditDeviceComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/cube/cube.component.ts\n            \n            component\n            CubeComponent\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/app/device-operations/device-operations.component.ts\n            \n            component\n            DeviceOperationsComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/devices/devices.component.ts\n            \n            component\n            DevicesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/log/log.component.ts\n            \n            component\n            LogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/model.component.ts\n            \n            component\n            ModelComponent\n            \n                16 %\n                (4/25)\n            \n        \n        \n            \n                \n                src/app/services/devices.service.ts\n            \n            injectable\n            DevicesService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/markdown.service.ts\n            \n            injectable\n            MarkdownService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/bug.ts\n            \n            class\n            Bug\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/device.ts\n            \n            class\n            Device\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/deviceCategories.ts\n            \n            class\n            DeviceCategories\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/deviceCategories.ts\n            \n            interface\n            DeviceCategoriesInterfance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/deviceList.ts\n            \n            class\n            DeviceList\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/deviceTypes.ts\n            \n            class\n            DeviceTypes\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/deviceTypes.ts\n            \n            interface\n            DataDeviceType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/deviceTypes.ts\n            \n            function\n            findObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/deviceTypes.ts\n            \n            variable\n            devicesT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/deviceTypes.ts\n            \n            variable\n            f\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils.ts\n            \n            function\n            date_TO_String\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils.ts\n            \n            function\n            getDateString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tmp/find.ts\n            \n            function\n            findCherries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tmp/find.ts\n            \n            variable\n            inventory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.0.0\n        \n            @angular/common : ^15.0.0\n        \n            @angular/compiler : ^15.0.0\n        \n            @angular/core : ^15.0.0\n        \n            @angular/forms : ^15.0.0\n        \n            @angular/material : ^15.0.0\n        \n            @angular/platform-browser : ^15.0.0\n        \n            @angular/platform-browser-dynamic : ^15.0.0\n        \n            @angular/router : ^15.0.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @ng-bootstrap/ng-bootstrap : ^14.0.1\n        \n            @popperjs/core : ^2.11.7\n        \n            @types/lodash : ^4.14.192\n        \n            bootstrap : ^5.2.3\n        \n            bootstrap-icons : ^1.10.3\n        \n            install : ^0.13.0\n        \n            jquery : ^3.6.4\n        \n            karma-cli : ^2.0.0\n        \n            lodash : ^4.17.21\n        \n            ngx-markdown : ^15.1.2\n        \n            rxjs : ~7.8.0\n        \n            three : ^0.149.0\n        \n            tslib : ^2.5.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            date_TO_String   (src/.../utils.ts)\n                        \n                        \n                            findCherries   (src/.../find.ts)\n                        \n                        \n                            findObj   (src/.../deviceTypes.ts)\n                        \n                        \n                            getDateString   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        date_TO_String\n                        \n                    \n                \n            \n            \n                \ndate_TO_String(date_Object: Date)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date_Object\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateString\n                        \n                    \n                \n            \n            \n                \ngetDateString()\n                \n            \n\n\n\n\n            \n                \n                    getDateString(): string\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    src/app/tmp/find.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findCherries\n                        \n                    \n                \n            \n            \n                \nfindCherries(fruit)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fruit\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/shared/deviceTypes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findObj\n                        \n                    \n                \n            \n            \n                \nfindObj(arr: Array, obj: deviceTypeType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    obj\n                                    \n                                                deviceTypeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n3d inventory\nProject create 3d inventory on stack\n\nAngular\nTree\nNeo4j/Oracle\nREST\nDocker\n\n\n\n\nAngular + Three.js\nThis project consists of two examples:\n\nTutorial to render 3D Cube in Angular + Three.js\nTutorial to render 3D Model in Angular + Three.js\n\nWe'll learn the fundamentals of Three.js and integrate the Three.js scene in Angular.\nUsage\ngit clone \n\nnpm install\nng serve\n\nlocalhost:4200 will render cube\nlocalhost:4200/model will render 3D modelSwagger client\nng generate library swagger-clientgenerate library: projects/swagger-client\ncopy to src all generated by swaggercodegen code\nIdentityService.getApiConfiguration() is a static method where you can provide API configuration. You usually will want to populate the authentication token in this method.\nimport {ApiModule} from 'foo-swagger-client';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ...\n    ApiModule.forRoot(IdentityService.getApiConfiguration),\n    ...\n})\nexport class AppModule {\n}Json serwer\nFor testinting api run jsonserver.\nbaseurl = 'http://localhost:3000';\n\"jsonserver:bugs\": \"json-server --watch bugs.json\",\n\"jsonserver:devices\": \"json-server --watch devices.json\"Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\nP3lease make sure to update tests as appropriate.\nCode guidelines\nNot forget about https://github.com/Microsoft/TypeScript/wiki/Coding-guidelines\nNames\n\nUse PascalCase for type names.\nDo not use I as a prefix for interface names.\nUse PascalCase for enum values.\nUse camelCase for function names.\nUse camelCase for property names and local variables.\nDo not use _ as a prefix for private properties.\nUse whole words in names when possible.\n\nComponents\n\n1 file per logical component (e.g. parser, scanner, emitter, checker).\nDo not add new files. :)\nfiles with .generated.* suffix are auto-generated, do not hand-edit them.\n\nTypes\n\nDo not export types/functions unless you need to share it across multiple components.\nDo not introduce new types/values to the global namespace.\nShared types should be defined in types.ts.\nWithin a file, type definitions should come first.\n\nnull and undefined\n\nUse undefined. Do not use null.\n\nGeneral Assumptions\n\nConsider objects like Nodes, Symbols, etc. as immutable outside the component that created them. Do not change them.\nConsider arrays as immutable by default after creation.\n\nClasses\nFor consistency, do not use classes in the core compiler pipeline. Use function closures instead.\nFlags\nMore than 2 related Boolean properties on a type should be turned into a flag.\nComments\nUse JSDoc style comments for functions, interfaces, enums, and classes.\nStrings\n\nUse double quotes for strings.\nAll strings visible to the user need to be localized (make an entry in diagnosticMessages.json).\n\nDiagnostic Messages\n\nUse a period at the end of a sentence.\nUse indefinite articles for indefinite entities.\nDefinite entities should be named (this is for a variable name, type name, etc..).\nWhen stating a rule, the subject should be in the singular (e.g. \"An external module cannot...\" instead of \"External modules cannot...\").\nUse present tense.\n\nNext todo\n\nadd menu\nadd action menu requested rest api to neo4j/Oracle\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddDeviceComponent\n\nAddDeviceComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddDeviceComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCubeComponent\n\nCubeComponent\n\nAppModule -->\n\nCubeComponent->AppModule\n\n\n\n\n\nDeviceOperationsComponent\n\nDeviceOperationsComponent\n\nAppModule -->\n\nDeviceOperationsComponent->AppModule\n\n\n\n\n\nDevicesComponent\n\nDevicesComponent\n\nAppModule -->\n\nDevicesComponent->AppModule\n\n\n\n\n\nDevicesListComponent\n\nDevicesListComponent\n\nAppModule -->\n\nDevicesListComponent->AppModule\n\n\n\n\n\nEditDeviceComponent\n\nEditDeviceComponent\n\nAppModule -->\n\nEditDeviceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLogComponent\n\nLogComponent\n\nAppModule -->\n\nLogComponent->AppModule\n\n\n\n\n\nModelComponent\n\nModelComponent\n\nAppModule -->\n\nModelComponent->AppModule\n\n\n\n\n\nDevicesComponent \n\nDevicesComponent \n\nDevicesComponent  -->\n\nAppModule->DevicesComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDevicesService\n\nDevicesService\n\nAppModule -->\n\nDevicesService->AppModule\n\n\n\n\n\nLogService\n\nLogService\n\nAppModule -->\n\nLogService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.3\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deviceTypeType   (src/.../deviceTypes.ts)\n                        \n                        \n                            type_log   (src/.../log.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/deviceTypes.ts\n    \n    \n        \n            \n                \n                    \n                    deviceTypeType\n                \n            \n            \n                \n                    DeviceTypes\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/services/log.service.ts\n    \n    \n        \n            \n                \n                    \n                    type_log\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            devicesT   (src/.../deviceTypes.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            f   (src/.../deviceTypes.ts)\n                        \n                        \n                            inventory   (src/.../find.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/shared/deviceTypes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        devicesT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DeviceTypes()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        f\n                        \n                    \n                \n            \n                \n                    \n                        Default value : devicesT.findType('Probe')\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/tmp/find.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inventory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {name: 'apples', quantity: 2},\n  {name: 'bananas', quantity: 0},\n  {name: 'cherries', quantity: 5}\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
